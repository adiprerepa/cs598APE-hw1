<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="934" onload="init(evt)" viewBox="0 0 2400 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="934.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="917" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="917" > </text>
<g id="frames">
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="517" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>solveScalers (431,548,348 samples, 8.91%)</title><rect x="473.8" y="565" width="211.9" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="476.75" y="591.5" >solveScalers</text>
</g>
<g >
<title>mmap_region (908,885 samples, 0.02%)</title><rect x="10.0" y="85" width="0.4" height="47.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>Vector::Vector (48,768,040 samples, 1.01%)</title><rect x="661.7" y="517" width="24.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="664.74" y="543.5" >V..</text>
</g>
<g >
<title>do_syscall_64 (908,885 samples, 0.02%)</title><rect x="10.0" y="373" width="0.4" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>Vector::operator+ (95,476,905 samples, 1.97%)</title><rect x="10.4" y="661" width="46.9" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="13.45" y="687.5" >Vect..</text>
</g>
<g >
<title>Sphere::getLightIntersection (45,220,777 samples, 0.93%)</title><rect x="2180.3" y="565" width="22.2" height="47.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="2183.33" y="591.5" >S..</text>
</g>
<g >
<title>do_mmap (908,885 samples, 0.02%)</title><rect x="10.0" y="133" width="0.4" height="47.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>Vector::dot (48,017,833 samples, 0.99%)</title><rect x="1343.3" y="469" width="23.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1346.29" y="495.5" >V..</text>
</g>
<g >
<title>Vector::operator- (289,324,012 samples, 5.97%)</title><rect x="331.7" y="565" width="142.1" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="334.66" y="591.5" >Vector::operator-</text>
</g>
<g >
<title>Plane::getIntersection (46,376,001 samples, 0.96%)</title><rect x="81.4" y="565" width="22.8" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="84.45" y="591.5" >P..</text>
</g>
<g >
<title>Vector::Vector (48,413,342 samples, 1.00%)</title><rect x="1061.8" y="469" width="23.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1064.83" y="495.5" >V..</text>
</g>
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="469" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>Vector::operator- (46,992,309 samples, 0.97%)</title><rect x="2273.8" y="565" width="23.0" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2276.75" y="591.5" >V..</text>
</g>
<g >
<title>insertionSort (49,101,624 samples, 1.01%)</title><rect x="1478.0" y="565" width="24.1" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1481.01" y="591.5" >i..</text>
</g>
<g >
<title>Sphere::getLightIntersection (47,996,442 samples, 0.99%)</title><rect x="1414.7" y="517" width="23.5" height="47.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1417.68" y="543.5" >S..</text>
</g>
<g >
<title>solveScalers (241,050,172 samples, 4.97%)</title><rect x="967.2" y="517" width="118.4" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="970.22" y="543.5" >solveScalers</text>
</g>
<g >
<title>vm_mmap_pgoff (908,885 samples, 0.02%)</title><rect x="10.0" y="181" width="0.4" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>Vector::dot (47,699,631 samples, 0.98%)</title><rect x="1874.5" y="517" width="23.4" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1877.50" y="543.5" >V..</text>
</g>
<g >
<title>Vector::operator- (48,229,517 samples, 1.00%)</title><rect x="1366.9" y="469" width="23.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1369.88" y="495.5" >V..</text>
</g>
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="709" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>getLight (365,616,561 samples, 7.54%)</title><rect x="1298.5" y="565" width="179.5" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1301.45" y="591.5" >getLight</text>
</g>
<g >
<title>mas_next_range (908,885 samples, 0.02%)</title><rect x="10.0" y="37" width="0.4" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>Vector::operator- (49,113,661 samples, 1.01%)</title><rect x="732.5" y="613" width="24.1" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="735.48" y="639.5" >V..</text>
</g>
<g >
<title>Vector::mag2 (49,085,469 samples, 1.01%)</title><rect x="1109.7" y="517" width="24.1" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1112.66" y="543.5" >V..</text>
</g>
<g >
<title>Vector::operator* (48,307,582 samples, 1.00%)</title><rect x="824.1" y="517" width="23.7" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="827.05" y="543.5" >V..</text>
</g>
<g >
<title>Vector::Vector (49,082,124 samples, 1.01%)</title><rect x="1205.3" y="373" width="24.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1208.33" y="399.5" >V..</text>
</g>
<g >
<title>Box::getIntersection (48,769,123 samples, 1.01%)</title><rect x="1133.8" y="517" width="23.9" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1136.76" y="543.5" >B..</text>
</g>
<g >
<title>all (4,846,109,771 samples, 100%)</title><rect x="10.0" y="853" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (96,247,350 samples, 1.99%)</title><rect x="1343.3" y="517" width="47.3" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1346.29" y="543.5" >Box:..</text>
</g>
<g >
<title>Plane::getLightIntersection (47,699,631 samples, 0.98%)</title><rect x="1874.5" y="565" width="23.4" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1877.50" y="591.5" >P..</text>
</g>
<g >
<title>Vector::operator+ (48,769,123 samples, 1.01%)</title><rect x="1133.8" y="469" width="23.9" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1136.76" y="495.5" >V..</text>
</g>
<g >
<title>Vector::operator* (145,001,610 samples, 2.99%)</title><rect x="2202.5" y="565" width="71.3" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2205.54" y="591.5" >Vector::..</text>
</g>
<g >
<title>Plane::getIntersection (48,974,127 samples, 1.01%)</title><rect x="1085.6" y="565" width="24.1" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1088.60" y="591.5" >P..</text>
</g>
<g >
<title>Vector::Vector (96,736,711 samples, 2.00%)</title><rect x="1803.1" y="469" width="47.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1806.12" y="495.5" >Vect..</text>
</g>
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="565" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>Vector::operator- (49,082,124 samples, 1.01%)</title><rect x="1205.3" y="421" width="24.1" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1208.33" y="447.5" >V..</text>
</g>
<g >
<title>Vector::operator- (48,418,121 samples, 1.00%)</title><rect x="943.4" y="517" width="23.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="946.44" y="543.5" >V..</text>
</g>
<g >
<title>[unknown] (4,845,198,435 samples, 99.98%)</title><rect x="10.4" y="757" width="2379.6" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.45" y="783.5" >[unknown]</text>
</g>
<g >
<title>calcColor (335,339,681 samples, 6.92%)</title><rect x="1133.8" y="565" width="164.7" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1136.76" y="591.5" >calcColor</text>
</g>
<g >
<title>Box::getIntersection (669,919,318 samples, 13.82%)</title><rect x="756.6" y="565" width="329.0" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="759.60" y="591.5" >Box::getIntersection</text>
</g>
<g >
<title>Box::getLightIntersection (146,039,282 samples, 3.01%)</title><rect x="1157.7" y="469" width="71.7" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1160.71" y="495.5" >Box::get..</text>
</g>
<g >
<title>Vector::operator+ (194,794,229 samples, 4.02%)</title><rect x="847.8" y="517" width="95.6" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="850.78" y="543.5" >Vector::ope..</text>
</g>
<g >
<title>refresh (4,845,198,435 samples, 99.98%)</title><rect x="10.4" y="709" width="2379.6" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.45" y="735.5" >refresh</text>
</g>
<g >
<title>Vector::Vector (48,229,517 samples, 1.00%)</title><rect x="1366.9" y="421" width="23.7" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1369.88" y="447.5" >V..</text>
</g>
<g >
<title>Vector::dot (47,769,221 samples, 0.99%)</title><rect x="800.6" y="469" width="23.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="803.59" y="495.5" >V..</text>
</g>
<g >
<title>x64_sys_call (908,885 samples, 0.02%)</title><rect x="10.0" y="325" width="0.4" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>Vector::Vector (46,992,309 samples, 0.97%)</title><rect x="2273.8" y="517" width="23.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2276.75" y="543.5" >V..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (908,885 samples, 0.02%)</title><rect x="10.0" y="421" width="0.4" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>Plane::getIntersection (137,349,214 samples, 2.83%)</title><rect x="756.6" y="517" width="67.5" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="759.60" y="543.5" >Plane::..</text>
</g>
<g >
<title>Ray::Ray (575,035,055 samples, 11.87%)</title><rect x="1897.9" y="565" width="282.4" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1900.92" y="591.5" >Ray::Ray</text>
</g>
<g >
<title>__x64_sys_mmap (908,885 samples, 0.02%)</title><rect x="10.0" y="277" width="0.4" height="47.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>calcColor (4,749,721,530 samples, 98.01%)</title><rect x="57.3" y="661" width="2332.7" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="60.34" y="687.5" >calcColor</text>
</g>
<g >
<title>Vector::operator+ (42,559,421 samples, 0.88%)</title><rect x="1277.6" y="469" width="20.9" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1280.55" y="495.5" ></text>
</g>
<g >
<title>Vector::Vector (93,446,270 samples, 1.93%)</title><rect x="104.2" y="517" width="45.9" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.22" y="543.5" >Vect..</text>
</g>
<g >
<title>operator* (48,767,058 samples, 1.01%)</title><rect x="2366.0" y="613" width="24.0" height="47.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="2369.05" y="639.5" >o..</text>
</g>
<g >
<title>getLight (1,618,160,287 samples, 33.39%)</title><rect x="1502.1" y="613" width="794.7" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1505.13" y="639.5" >getLight</text>
</g>
<g >
<title>Ray::Ray (49,102,180 samples, 1.01%)</title><rect x="1390.6" y="517" width="24.1" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1393.56" y="543.5" >R..</text>
</g>
<g >
<title>Vector::dot (48,974,127 samples, 1.01%)</title><rect x="1085.6" y="517" width="24.1" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1088.60" y="543.5" >V..</text>
</g>
<g >
<title>main.exe (4,846,107,320 samples, 100.00%)</title><rect x="10.0" y="805" width="2380.0" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >main.exe</text>
</g>
<g >
<title>Vector::operator* (145,809,426 samples, 3.01%)</title><rect x="1779.0" y="517" width="71.6" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1782.02" y="543.5" >Vector::..</text>
</g>
<g >
<title>Vector::operator* (39,181,459 samples, 0.81%)</title><rect x="1438.2" y="517" width="19.3" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1441.25" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="757" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (908,885 samples, 0.02%)</title><rect x="10.0" y="229" width="0.4" height="47.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>Vector::Vector (48,736,156 samples, 1.01%)</title><rect x="449.8" y="517" width="24.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="452.82" y="543.5" >V..</text>
</g>
<g >
<title>Vector::dot (48,595,660 samples, 1.00%)</title><rect x="1850.6" y="517" width="23.9" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1853.63" y="543.5" >V..</text>
</g>
<g >
<title>Sphere::getIntersection (49,085,469 samples, 1.01%)</title><rect x="1109.7" y="565" width="24.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.66" y="591.5" >S..</text>
</g>
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="613" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>Vector::dot (516,272,449 samples, 10.65%)</title><rect x="1525.5" y="517" width="253.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1528.47" y="543.5" >Vector::dot</text>
</g>
<g >
<title>Vector::Vector (48,767,058 samples, 1.01%)</title><rect x="2366.0" y="565" width="24.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2369.05" y="591.5" >V..</text>
</g>
<g >
<title>Disk::getLightIntersection (48,595,660 samples, 1.00%)</title><rect x="1850.6" y="565" width="23.9" height="47.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1853.63" y="591.5" >D..</text>
</g>
<g >
<title>Plane::getIntersection (46,064,501 samples, 0.95%)</title><rect x="685.7" y="613" width="22.6" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="688.69" y="639.5" >P..</text>
</g>
<g >
<title>Vector::operator+ (369,656,166 samples, 7.63%)</title><rect x="150.1" y="565" width="181.6" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="153.12" y="591.5" >Vector::operator+</text>
</g>
<g >
<title>[unknown]  (908,885 samples, 0.02%)</title><rect x="10.0" y="661" width="0.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>getLight (286,570,558 samples, 5.91%)</title><rect x="1157.7" y="517" width="140.8" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1160.71" y="543.5" >getLight</text>
</g>
<g >
<title>Vector::dot (96,957,158 samples, 2.00%)</title><rect x="1157.7" y="421" width="47.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1160.71" y="447.5" >Vect..</text>
</g>
<g >
<title>calcColor (1,518,036,780 samples, 31.32%)</title><rect x="756.6" y="613" width="745.5" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="759.60" y="639.5" >calcColor</text>
</g>
<g >
<title>Vector::Vector (43,136,357 samples, 0.89%)</title><rect x="310.5" y="517" width="21.2" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="313.48" y="543.5" ></text>
</g>
<g >
<title>Ray::Ray (97,971,855 samples, 2.02%)</title><rect x="1229.4" y="469" width="48.2" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1232.44" y="495.5" >Ray:..</text>
</g>
<g >
<title>insertionSort (140,937,240 samples, 2.91%)</title><rect x="2296.8" y="613" width="69.2" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="2299.83" y="639.5" >inserti..</text>
</g>
<g >
<title>Vector::operator* (93,446,270 samples, 1.93%)</title><rect x="104.2" y="565" width="45.9" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="107.22" y="591.5" >Vect..</text>
</g>
<g >
<title>Box::getIntersection (1,279,446,422 samples, 26.40%)</title><rect x="57.3" y="613" width="628.4" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="60.34" y="639.5" >Box::getIntersection</text>
</g>
<g >
<title>Box::getLightIntersection (662,081,875 samples, 13.66%)</title><rect x="1525.5" y="565" width="325.1" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1528.47" y="591.5" >Box::getLightIntersection</text>
</g>
<g >
<title>solveScalers (41,784,757 samples, 0.86%)</title><rect x="1457.5" y="517" width="20.5" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1460.49" y="543.5" ></text>
</g>
<g >
<title>Ray::Ray (49,195,581 samples, 1.02%)</title><rect x="708.3" y="613" width="24.2" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="711.32" y="639.5" >R..</text>
</g>
<g >
<title>Vector::Vector (48,307,582 samples, 1.00%)</title><rect x="824.1" y="469" width="23.7" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="827.05" y="495.5" >V..</text>
</g>
</g>
</svg>
