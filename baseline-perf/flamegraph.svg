<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="982" onload="init(evt)" viewBox="0 0 2400 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="982.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="965" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="965" > </text>
<g id="frames">
<g >
<title>tick_sched_handle (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="181" width="19.5" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1185.07" y="207.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;double&gt;::infinity (46,878,978 samples, 0.83%)</title><rect x="1934.8" y="613" width="19.7" height="47.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1937.81" y="639.5" ></text>
</g>
<g >
<title>Vector::operator* (49,072,357 samples, 0.87%)</title><rect x="1815.8" y="565" width="20.6" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1818.77" y="591.5" ></text>
</g>
<g >
<title>[unknown]  (48,692,845 samples, 0.86%)</title><rect x="1299.2" y="613" width="20.5" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1302.23" y="639.5" ></text>
</g>
<g >
<title>operator* (48,379,200 samples, 0.85%)</title><rect x="1914.5" y="613" width="20.3" height="47.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1917.47" y="639.5" ></text>
</g>
<g >
<title>Vector::dot (225,992,727 samples, 3.99%)</title><rect x="649.3" y="565" width="95.0" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="652.31" y="591.5" >Vector::dot</text>
</g>
<g >
<title>Vector::Vector (48,427,190 samples, 0.86%)</title><rect x="1661.5" y="469" width="20.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1664.55" y="495.5" ></text>
</g>
<g >
<title>Plane::getIntersection (318,156,709 samples, 5.62%)</title><rect x="610.6" y="613" width="133.7" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="613.56" y="639.5" >Plane::getInters..</text>
</g>
<g >
<title>do_read_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="373" width="0.1" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>Plane::getIntersection (49,112,763 samples, 0.87%)</title><rect x="865.6" y="661" width="20.6" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="868.59" y="687.5" ></text>
</g>
<g >
<title>Vector::dot (49,112,763 samples, 0.87%)</title><rect x="865.6" y="613" width="20.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="868.59" y="639.5" ></text>
</g>
<g >
<title>[unknown]  (312,026 samples, 0.01%)</title><rect x="10.0" y="805" width="0.1" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>getLight (795,009,339 samples, 14.05%)</title><rect x="1954.5" y="661" width="334.3" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1957.53" y="687.5" >getLight</text>
</g>
<g >
<title>solveScalers (191,320,011 samples, 3.38%)</title><rect x="785.1" y="613" width="80.5" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="788.14" y="639.5" >solveScal..</text>
</g>
<g >
<title>Box::getIntersection (95,538,224 samples, 1.69%)</title><rect x="1419.4" y="565" width="40.2" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1422.39" y="591.5" >Box..</text>
</g>
<g >
<title>exit_mm (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="517" width="19.8" height="47.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="2373.23" y="543.5" ></text>
</g>
<g >
<title>calcColor (527,274,181 samples, 9.32%)</title><rect x="1319.7" y="613" width="221.7" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1322.70" y="639.5" >calcColor</text>
</g>
<g >
<title>Vector::operator- (48,760,016 samples, 0.86%)</title><rect x="764.6" y="613" width="20.5" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="767.63" y="639.5" ></text>
</g>
<g >
<title>Vector::Vector (47,969,074 samples, 0.85%)</title><rect x="2124.8" y="517" width="20.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2127.76" y="543.5" ></text>
</g>
<g >
<title>Vector::operator- (44,801,580 samples, 0.79%)</title><rect x="1221.5" y="565" width="18.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1224.51" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="373" width="19.5" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1185.07" y="399.5" ></text>
</g>
<g >
<title>Vector::dot (144,403,421 samples, 2.55%)</title><rect x="1562.0" y="517" width="60.7" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1564.98" y="543.5" >Vector..</text>
</g>
<g >
<title>solveScalers (95,809,761 samples, 1.69%)</title><rect x="2144.9" y="565" width="40.3" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2147.94" y="591.5" >sol..</text>
</g>
<g >
<title>__handle_mm_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="517" width="0.1" height="47.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="277" width="19.5" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1185.07" y="303.5" ></text>
</g>
<g >
<title>Vector::operator* (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="565" width="19.5" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1185.07" y="591.5" ></text>
</g>
<g >
<title>Box::getIntersection (48,757,908 samples, 0.86%)</title><rect x="27.6" y="709" width="20.5" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="30.58" y="735.5" ></text>
</g>
<g >
<title>solveScalers (220,780,089 samples, 3.90%)</title><rect x="1681.9" y="517" width="92.9" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1684.91" y="543.5" >solveScalers</text>
</g>
<g >
<title>main.exe (5,659,609,136 samples, 100.00%)</title><rect x="10.0" y="853" width="2380.0" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >main.exe</text>
</g>
<g >
<title>mmput (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="469" width="19.8" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="2373.23" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="709" width="0.1" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>unmap_single_vma (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="277" width="19.8" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="2373.23" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="229" width="19.8" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="2373.23" y="255.5" ></text>
</g>
<g >
<title>Vector::dot (49,038,600 samples, 0.87%)</title><rect x="2205.9" y="565" width="20.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2208.87" y="591.5" ></text>
</g>
<g >
<title>Vector::dot (49,086,790 samples, 0.87%)</title><rect x="2185.2" y="565" width="20.7" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2188.23" y="591.5" ></text>
</g>
<g >
<title>Plane::getIntersection (95,535,771 samples, 1.69%)</title><rect x="1141.9" y="565" width="40.2" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1144.90" y="591.5" >Pla..</text>
</g>
<g >
<title>Vector::Vector (49,072,357 samples, 0.87%)</title><rect x="1815.8" y="517" width="20.6" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1818.77" y="543.5" ></text>
</g>
<g >
<title>Vector::operator* (99,715,852 samples, 1.76%)</title><rect x="2226.5" y="613" width="41.9" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2229.49" y="639.5" >Vec..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="805" width="19.8" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="2373.23" y="831.5" ></text>
</g>
<g >
<title>Vector::operator+ (48,563,640 samples, 0.86%)</title><rect x="2268.4" y="613" width="20.4" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="2271.42" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="469" width="19.5" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1185.07" y="495.5" ></text>
</g>
<g >
<title>trigger_load_balance (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="37" width="19.5" height="47.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1185.07" y="63.5" ></text>
</g>
<g >
<title>do_group_exit (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="613" width="19.8" height="47.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="2373.23" y="639.5" ></text>
</g>
<g >
<title>[unknown]  (312,026 samples, 0.01%)</title><rect x="10.0" y="757" width="0.1" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>exit_mmap (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="373" width="19.8" height="47.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="2373.23" y="399.5" ></text>
</g>
<g >
<title>solveScalers (140,019,011 samples, 2.47%)</title><rect x="1240.3" y="565" width="58.9" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1243.35" y="591.5" >solveS..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="421" width="19.5" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1185.07" y="447.5" ></text>
</g>
<g >
<title>Plane::getLightIntersection (49,038,600 samples, 0.87%)</title><rect x="2205.9" y="613" width="20.6" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="2208.87" y="639.5" ></text>
</g>
<g >
<title>Vector::operator+ (47,248,549 samples, 0.83%)</title><rect x="1201.6" y="565" width="19.9" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1204.64" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="229" width="19.5" height="47.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1185.07" y="255.5" ></text>
</g>
<g >
<title>unmap_vmas (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="325" width="19.8" height="47.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="2373.23" y="351.5" ></text>
</g>
<g >
<title>Vector::operator- (93,667,370 samples, 1.66%)</title><rect x="2105.5" y="565" width="39.4" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2108.55" y="591.5" >Vec..</text>
</g>
<g >
<title>__x64_sys_exit_group (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="661" width="19.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2373.23" y="687.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (499,605,668 samples, 8.83%)</title><rect x="1975.1" y="613" width="210.1" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1978.13" y="639.5" >Box::getLightIntersection</text>
</g>
<g >
<title>operator* (49,118,744 samples, 0.87%)</title><rect x="2349.6" y="661" width="20.6" height="47.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="2352.58" y="687.5" ></text>
</g>
<g >
<title>Ray::Ray (97,535,167 samples, 1.72%)</title><rect x="1774.8" y="565" width="41.0" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1777.75" y="591.5" >Ray..</text>
</g>
<g >
<title>Vector::operator+ (93,628,394 samples, 1.65%)</title><rect x="1836.4" y="565" width="39.4" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1839.41" y="591.5" >Vec..</text>
</g>
<g >
<title>refresh (5,612,288,155 samples, 99.16%)</title><rect x="10.1" y="757" width="2360.1" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.13" y="783.5" >refresh</text>
</g>
<g >
<title>Vector::dot (48,655,891 samples, 0.86%)</title><rect x="1521.0" y="469" width="20.4" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1523.98" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="661" width="0.1" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (554,828,504 samples, 9.80%)</title><rect x="1541.4" y="565" width="233.4" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1544.44" y="591.5" >Box::getLightIntersection</text>
</g>
<g >
<title>[unknown]  (136,577,995 samples, 2.41%)</title><rect x="906.0" y="613" width="57.4" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="909.00" y="639.5" >[unkno..</text>
</g>
<g >
<title>do_syscall_64 (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="757" width="19.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2373.23" y="783.5" ></text>
</g>
<g >
<title>x64_sys_call (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="709" width="19.8" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="2373.23" y="735.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="325" width="19.5" height="47.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1185.07" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="469" width="0.1" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="85" width="19.5" height="47.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1185.07" y="111.5" ></text>
</g>
<g >
<title>Vector::Vector (45,516,964 samples, 0.80%)</title><rect x="1622.7" y="469" width="19.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1625.70" y="495.5" ></text>
</g>
<g >
<title>Vector::dot (95,535,771 samples, 1.69%)</title><rect x="1141.9" y="517" width="40.2" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1144.90" y="543.5" >Vec..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="181" width="19.8" height="47.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="2373.23" y="207.5" ></text>
</g>
<g >
<title>getLight (795,064,422 samples, 14.05%)</title><rect x="1541.4" y="613" width="334.4" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1544.44" y="639.5" >getLight</text>
</g>
<g >
<title>Vector::operator* (42,713,727 samples, 0.75%)</title><rect x="2087.6" y="565" width="17.9" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2090.58" y="591.5" ></text>
</g>
<g >
<title>calcColor (5,430,979,487 samples, 95.96%)</title><rect x="86.4" y="709" width="2283.8" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="89.38" y="735.5" >calcColor</text>
</g>
<g >
<title>__mmput (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="421" width="19.8" height="47.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="2373.23" y="447.5" ></text>
</g>
<g >
<title>insertionSort (144,414,077 samples, 2.55%)</title><rect x="2288.8" y="661" width="60.8" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="2291.85" y="687.5" >insert..</text>
</g>
<g >
<title>Box::getLightIntersection (96,652,842 samples, 1.71%)</title><rect x="1500.8" y="517" width="40.6" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1503.79" y="543.5" >Box..</text>
</g>
<g >
<title>set_pte_range (312,026 samples, 0.01%)</title><rect x="10.0" y="325" width="0.1" height="47.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>Vector::Vector (44,801,580 samples, 0.79%)</title><rect x="1221.5" y="517" width="18.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1224.51" y="543.5" ></text>
</g>
<g >
<title>insertionSort (91,998,983 samples, 1.63%)</title><rect x="1875.8" y="613" width="38.7" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1878.78" y="639.5" >ins..</text>
</g>
<g >
<title>Vector::dot (179,441,851 samples, 3.17%)</title><rect x="2012.1" y="565" width="75.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2015.13" y="591.5" >Vector::..</text>
</g>
<g >
<title>Vector::Vector (50,723,785 samples, 0.90%)</title><rect x="2247.1" y="565" width="21.3" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2250.09" y="591.5" >V..</text>
</g>
<g >
<title>Vector::Vector (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="517" width="19.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.07" y="543.5" ></text>
</g>
<g >
<title>getLight (96,652,842 samples, 1.71%)</title><rect x="1500.8" y="565" width="40.6" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1503.79" y="591.5" >get..</text>
</g>
<g >
<title>[unknown]  (49,038,264 samples, 0.87%)</title><rect x="1480.2" y="517" width="20.6" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1483.17" y="543.5" ></text>
</g>
<g >
<title>do_exit (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="565" width="19.8" height="47.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="2373.23" y="591.5" ></text>
</g>
<g >
<title>Plane::getIntersection (47,600,466 samples, 0.84%)</title><rect x="1439.5" y="517" width="20.1" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1442.54" y="543.5" ></text>
</g>
<g >
<title>do_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="47.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>Disk::getLightIntersection (49,086,790 samples, 0.87%)</title><rect x="2185.2" y="613" width="20.7" height="47.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="2188.23" y="639.5" ></text>
</g>
<g >
<title>Box::getIntersection (422,911,792 samples, 7.47%)</title><rect x="1121.4" y="613" width="177.8" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1124.38" y="639.5" >Box::getIntersection</text>
</g>
<g >
<title>Vector::operator+ (45,516,964 samples, 0.80%)</title><rect x="1622.7" y="517" width="19.1" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1625.70" y="543.5" ></text>
</g>
<g >
<title>Vector::Vector (91,060,260 samples, 1.61%)</title><rect x="48.1" y="709" width="38.3" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.08" y="735.5" >Vec..</text>
</g>
<g >
<title>handle_mm_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="565" width="0.1" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (312,026 samples, 0.01%)</title><rect x="10.0" y="613" width="0.1" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>Vector::operator- (95,276,966 samples, 1.68%)</title><rect x="1641.8" y="517" width="40.1" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1644.85" y="543.5" >Vec..</text>
</g>
<g >
<title>vm_normal_page (47,008,955 samples, 0.83%)</title><rect x="2370.2" y="133" width="19.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2373.23" y="159.5" ></text>
</g>
<g >
<title>update_process_times (46,530,033 samples, 0.82%)</title><rect x="1182.1" y="133" width="19.5" height="47.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.07" y="159.5" ></text>
</g>
<g >
<title>Vector::operator+ (48,238,307 samples, 0.85%)</title><rect x="744.3" y="613" width="20.3" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="747.35" y="639.5" ></text>
</g>
<g >
<title>[unknown]  (183,553,704 samples, 3.24%)</title><rect x="886.2" y="661" width="77.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="889.25" y="687.5" >[unknown] </text>
</g>
<g >
<title>Box::getIntersection (807,435,504 samples, 14.27%)</title><rect x="526.0" y="661" width="339.6" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="529.05" y="687.5" >Box::getIntersection</text>
</g>
<g >
<title>[unknown]  (98,044,648 samples, 1.73%)</title><rect x="1459.6" y="565" width="41.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1462.56" y="591.5" >[un..</text>
</g>
<g >
<title>calcColor (2,356,803,902 samples, 41.64%)</title><rect x="963.4" y="661" width="991.1" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="966.43" y="687.5" >calcColor</text>
</g>
<g >
<title>all (5,659,610,987 samples, 100%)</title><rect x="10.0" y="901" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>Vector::Vector (48,760,016 samples, 0.86%)</title><rect x="764.6" y="565" width="20.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="767.63" y="591.5" ></text>
</g>
<g >
<title>[unknown] (5,612,288,155 samples, 99.16%)</title><rect x="10.1" y="805" width="2360.1" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.13" y="831.5" >[unknown]</text>
</g>
</g>
</svg>
