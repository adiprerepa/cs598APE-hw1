<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="1078" onload="init(evt)" viewBox="0 0 2400 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="1078.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1061" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="1061" > </text>
<g id="frames">
<g >
<title>snd_complete_urb (33,612,866 samples, 0.49%)</title><rect x="80.6" y="325" width="11.7" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="83.57" y="351.5" ></text>
</g>
<g >
<title>Vector::Vector (117,945,764 samples, 1.73%)</title><rect x="1801.1" y="613" width="41.2" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1804.06" y="639.5" >Vec..</text>
</g>
<g >
<title>Sphere::getLightIntersection (33,620,001 samples, 0.49%)</title><rect x="2223.3" y="757" width="11.8" height="47.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="2226.30" y="783.5" ></text>
</g>
<g >
<title>Ray::Ray (34,699,423 samples, 0.51%)</title><rect x="1957.3" y="709" width="12.1" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1960.26" y="735.5" ></text>
</g>
<g >
<title>calcColor (2,547,788,075 samples, 37.42%)</title><rect x="1106.4" y="805" width="890.7" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1109.44" y="831.5" >calcColor</text>
</g>
<g >
<title>Vector::operator- (2,070,319 samples, 0.03%)</title><rect x="2156.4" y="709" width="0.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2159.39" y="735.5" ></text>
</g>
<g >
<title>getLight (38,547,802 samples, 0.57%)</title><rect x="2376.5" y="853" width="13.5" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="2379.52" y="879.5" ></text>
</g>
<g >
<title>Vector::Vector (217,383,821 samples, 3.19%)</title><rect x="707.3" y="709" width="76.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="710.34" y="735.5" >Vector::..</text>
</g>
<g >
<title>Vector::operator- (310,369,025 samples, 4.56%)</title><rect x="674.8" y="757" width="108.5" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="677.83" y="783.5" >Vector::opera..</text>
</g>
<g >
<title>Box::getLightIntersection (76,643,672 samples, 1.13%)</title><rect x="1596.8" y="661" width="26.7" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1599.76" y="687.5" >B..</text>
</g>
<g >
<title>usb_giveback_urb_bh (33,612,866 samples, 0.49%)</title><rect x="80.6" y="421" width="11.7" height="47.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="83.57" y="447.5" ></text>
</g>
<g >
<title>Disk::getIntersection (38,574,656 samples, 0.57%)</title><rect x="1004.9" y="805" width="13.5" height="47.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1007.90" y="831.5" ></text>
</g>
<g >
<title>solveScalers (74,225,058 samples, 1.09%)</title><rect x="2157.1" y="709" width="26.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2160.11" y="735.5" >s..</text>
</g>
<g >
<title>common_interrupt (33,612,866 samples, 0.49%)</title><rect x="80.6" y="709" width="11.7" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="83.57" y="735.5" ></text>
</g>
<g >
<title>Vector::operator+ (34,636,559 samples, 0.51%)</title><rect x="1635.5" y="661" width="12.1" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1638.50" y="687.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (33,612,866 samples, 0.49%)</title><rect x="80.6" y="469" width="11.7" height="47.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="83.57" y="495.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (266,662,615 samples, 3.92%)</title><rect x="2089.8" y="757" width="93.3" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="2092.84" y="783.5" >Box::getLig..</text>
</g>
<g >
<title>Plane::getIntersection (367,584,145 samples, 5.40%)</title><rect x="546.3" y="757" width="128.5" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="549.33" y="783.5" >Plane::getInters..</text>
</g>
<g >
<title>Box::getLightIntersection (783,958,753 samples, 11.52%)</title><rect x="1683.2" y="709" width="274.1" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1686.20" y="735.5" >Box::getLightIntersection</text>
</g>
<g >
<title>x64_sys_call (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="469" width="1.0" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="2375.52" y="495.5" ></text>
</g>
<g >
<title>getLight (219,269,800 samples, 3.22%)</title><rect x="1571.0" y="709" width="76.6" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1573.96" y="735.5" >getLight</text>
</g>
<g >
<title>Box::getIntersection (618,549,930 samples, 9.09%)</title><rect x="1250.8" y="757" width="216.2" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1253.80" y="783.5" >Box::getIntersection</text>
</g>
<g >
<title>do_syscall_64 (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="517" width="1.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2375.52" y="543.5" ></text>
</g>
<g >
<title>osq_lock (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="229" width="2.3" height="47.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="2376.53" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (235,485,465 samples, 3.46%)</title><rect x="10.0" y="853" width="82.3" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >[libc.so.6]</text>
</g>
<g >
<title>Vector::operator- (34,178,974 samples, 0.50%)</title><rect x="1518.9" y="661" width="12.0" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1521.94" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="565" width="1.0" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="2375.52" y="591.5" ></text>
</g>
<g >
<title>Vector::Vector (38,462,525 samples, 0.56%)</title><rect x="1890.0" y="613" width="13.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1892.96" y="639.5" ></text>
</g>
<g >
<title>Plane::getIntersection (38,574,656 samples, 0.57%)</title><rect x="1004.9" y="757" width="13.5" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1007.90" y="783.5" ></text>
</g>
<g >
<title>Vector::Vector (75,109,917 samples, 1.10%)</title><rect x="1903.4" y="613" width="26.3" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1906.41" y="639.5" >V..</text>
</g>
<g >
<title>Vector::dot (25,339,268 samples, 0.37%)</title><rect x="1383.3" y="709" width="8.9" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1386.31" y="735.5" ></text>
</g>
<g >
<title>Vector::Vector (2,186,051 samples, 0.03%)</title><rect x="2295.5" y="709" width="0.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2298.55" y="735.5" ></text>
</g>
<g >
<title>Vector::dot (37,990,395 samples, 0.56%)</title><rect x="1080.0" y="805" width="13.3" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1083.04" y="831.5" ></text>
</g>
<g >
<title>Ray::Ray (63,202,304 samples, 0.93%)</title><rect x="1031.3" y="805" width="22.1" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1034.28" y="831.5" >R..</text>
</g>
<g >
<title>Vector::operator* (134,589,732 samples, 1.98%)</title><rect x="2235.1" y="757" width="47.0" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2238.06" y="783.5" >Vect..</text>
</g>
<g >
<title>[libc.so.6] (117,665,214 samples, 1.73%)</title><rect x="2023.5" y="757" width="41.1" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="2026.49" y="783.5" >[li..</text>
</g>
<g >
<title>getLight (662,744,825 samples, 9.73%)</title><rect x="2064.6" y="805" width="231.7" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="2067.63" y="831.5" >getLight</text>
</g>
<g >
<title>Plane::getIntersection (242,465,821 samples, 3.56%)</title><rect x="1298.6" y="709" width="84.7" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1301.55" y="735.5" >Plane::ge..</text>
</g>
<g >
<title>vm_mmap_pgoff (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="325" width="1.0" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="2375.52" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (33,293,641 samples, 0.49%)</title><rect x="92.4" y="757" width="11.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="95.42" y="783.5" ></text>
</g>
<g >
<title>refresh (6,538,970,134 samples, 96.05%)</title><rect x="104.1" y="901" width="2285.9" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="107.06" y="927.5" >refresh</text>
</g>
<g >
<title>Ray::Ray (38,217,568 samples, 0.56%)</title><rect x="104.1" y="853" width="13.3" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="107.06" y="879.5" ></text>
</g>
<g >
<title>Sphere::getIntersection (76,260,220 samples, 1.12%)</title><rect x="1053.4" y="805" width="26.6" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1056.38" y="831.5" >S..</text>
</g>
<g >
<title>__usb_hcd_giveback_urb (33,612,866 samples, 0.49%)</title><rect x="80.6" y="373" width="11.7" height="47.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="83.57" y="399.5" ></text>
</g>
<g >
<title>Vector::dot (38,955,274 samples, 0.57%)</title><rect x="2183.1" y="709" width="13.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2186.06" y="735.5" ></text>
</g>
<g >
<title>down_write_killable (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="277" width="1.0" height="47.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="2375.52" y="303.5" ></text>
</g>
<g >
<title>Vector::operator+ (40,640,078 samples, 0.60%)</title><rect x="2282.1" y="757" width="14.2" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="2285.11" y="783.5" ></text>
</g>
<g >
<title>x64_sys_call (33,293,641 samples, 0.49%)</title><rect x="92.4" y="805" width="11.7" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="95.42" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="421" width="1.0" height="47.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="2375.52" y="447.5" ></text>
</g>
<g >
<title>free@plt (2,068,622 samples, 0.03%)</title><rect x="2375.8" y="853" width="0.7" height="47.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="2378.80" y="879.5" ></text>
</g>
<g >
<title>Vector::Vector (55,618,861 samples, 0.82%)</title><rect x="2262.7" y="709" width="19.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2265.66" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,376,876 samples, 0.14%)</title><rect x="2372.5" y="709" width="3.3" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="2375.52" y="735.5" ></text>
</g>
<g >
<title>calcColor (6,460,136,142 samples, 94.89%)</title><rect x="117.4" y="853" width="2258.4" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="120.42" y="879.5" >calcColor</text>
</g>
<g >
<title>[libgomp.so.1.0.0] (235,485,465 samples, 3.46%)</title><rect x="10.0" y="805" width="82.3" height="47.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[libgomp...</text>
</g>
<g >
<title>malloc (38,413,334 samples, 0.56%)</title><rect x="1647.6" y="709" width="13.4" height="47.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1650.61" y="735.5" ></text>
</g>
<g >
<title>Vector::dot (37,949,055 samples, 0.56%)</title><rect x="1505.7" y="613" width="13.2" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1508.67" y="639.5" ></text>
</g>
<g >
<title>tasklet_hi_action (33,612,866 samples, 0.49%)</title><rect x="80.6" y="517" width="11.7" height="47.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="83.57" y="543.5" ></text>
</g>
<g >
<title>Vector::dot (38,574,656 samples, 0.57%)</title><rect x="1004.9" y="709" width="13.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1007.90" y="735.5" ></text>
</g>
<g >
<title>asm_common_interrupt (33,612,866 samples, 0.49%)</title><rect x="80.6" y="757" width="11.7" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="83.57" y="783.5" ></text>
</g>
<g >
<title>__mmap (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="613" width="1.0" height="47.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="2375.52" y="639.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="373" width="1.0" height="47.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="2375.52" y="399.5" ></text>
</g>
<g >
<title>solveScalers (66,840,118 samples, 0.98%)</title><rect x="1443.7" y="709" width="23.3" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1446.67" y="735.5" >s..</text>
</g>
<g >
<title>Vector::operator+ (174,803,381 samples, 2.57%)</title><rect x="1842.3" y="661" width="61.1" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1845.30" y="687.5" >Vector..</text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (33,612,866 samples, 0.49%)</title><rect x="80.6" y="133" width="11.7" height="47.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="83.57" y="159.5" ></text>
</g>
<g >
<title>solveScalers (38,093,927 samples, 0.56%)</title><rect x="1610.2" y="613" width="13.3" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1613.23" y="639.5" ></text>
</g>
<g >
<title>__munmap (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="661" width="2.3" height="47.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="2376.53" y="687.5" ></text>
</g>
<g >
<title>xhci_ring_ep_doorbell (33,612,866 samples, 0.49%)</title><rect x="80.6" y="37" width="11.7" height="47.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="83.57" y="63.5" ></text>
</g>
<g >
<title>Vector::operator* (40,822,011 samples, 0.60%)</title><rect x="1982.8" y="709" width="14.3" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1985.84" y="735.5" ></text>
</g>
<g >
<title>malloc (78,478,403 samples, 1.15%)</title><rect x="2348.4" y="805" width="27.4" height="47.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="2351.37" y="831.5" >m..</text>
</g>
<g >
<title>handle_softirqs (33,612,866 samples, 0.49%)</title><rect x="80.6" y="565" width="11.7" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="83.57" y="591.5" ></text>
</g>
<g >
<title>do_group_exit (33,293,641 samples, 0.49%)</title><rect x="92.4" y="709" width="11.7" height="47.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="95.42" y="735.5" ></text>
</g>
<g >
<title>exit_mm (33,293,641 samples, 0.49%)</title><rect x="92.4" y="613" width="11.7" height="47.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="95.42" y="639.5" ></text>
</g>
<g >
<title>Box::getIntersection (148,484,900 samples, 2.18%)</title><rect x="1505.7" y="709" width="51.9" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1508.67" y="735.5" >Box::..</text>
</g>
<g >
<title>Vector::operator+ (37,520,708 samples, 0.55%)</title><rect x="1093.3" y="805" width="13.1" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1096.32" y="831.5" ></text>
</g>
<g >
<title>osq_lock (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="133" width="1.0" height="47.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="2375.52" y="159.5" ></text>
</g>
<g >
<title>Vector::operator* (117,945,764 samples, 1.73%)</title><rect x="1801.1" y="661" width="41.2" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1804.06" y="687.5" >Vec..</text>
</g>
<g >
<title>__irq_exit_rcu (33,612,866 samples, 0.49%)</title><rect x="80.6" y="613" width="11.7" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="83.57" y="639.5" ></text>
</g>
<g >
<title>Vector::operator- (38,457,168 samples, 0.56%)</title><rect x="1969.4" y="661" width="13.4" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1972.39" y="687.5" ></text>
</g>
<g >
<title>Vector::Vector (38,457,168 samples, 0.56%)</title><rect x="1969.4" y="613" width="13.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1972.39" y="639.5" ></text>
</g>
<g >
<title>getLight (961,329,672 samples, 14.12%)</title><rect x="1661.0" y="757" width="336.1" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1664.04" y="783.5" >getLight</text>
</g>
<g >
<title>insertionSort (148,894,244 samples, 2.19%)</title><rect x="2296.3" y="805" width="52.1" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="2299.31" y="831.5" >inser..</text>
</g>
<g >
<title>Plane::getIntersection (38,260,048 samples, 0.56%)</title><rect x="1557.6" y="709" width="13.4" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1560.58" y="735.5" ></text>
</g>
<g >
<title>main.exe (6,808,034,797 samples, 100.00%)</title><rect x="10.0" y="949" width="2380.0" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >main.exe</text>
</g>
<g >
<title>[libc.so.6] (235,495,509 samples, 3.46%)</title><rect x="10.0" y="901" width="82.3" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >[libc.so.6]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,293,641 samples, 0.49%)</title><rect x="92.4" y="901" width="11.7" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="95.42" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,293,641 samples, 0.49%)</title><rect x="92.4" y="853" width="11.7" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="95.42" y="879.5" ></text>
</g>
<g >
<title>Vector::Vector (40,044,196 samples, 0.59%)</title><rect x="977.5" y="709" width="14.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="980.55" y="735.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="229" width="1.0" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="2375.52" y="255.5" ></text>
</g>
<g >
<title>cfree (193,136,712 samples, 2.84%)</title><rect x="1997.1" y="805" width="67.5" height="47.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="2000.11" y="831.5" >cfree</text>
</g>
<g >
<title>mm_update_next_owner (33,293,641 samples, 0.49%)</title><rect x="92.4" y="565" width="11.7" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="95.42" y="591.5" ></text>
</g>
<g >
<title>down_write_killable (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="373" width="2.3" height="47.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="2376.53" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,376,876 samples, 0.14%)</title><rect x="2372.5" y="757" width="3.3" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="2375.52" y="783.5" ></text>
</g>
<g >
<title>Vector::mag2 (37,697,597 samples, 0.55%)</title><rect x="1066.9" y="757" width="13.1" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1069.86" y="783.5" ></text>
</g>
<g >
<title>Vector::operator- (110,104,925 samples, 1.62%)</title><rect x="1405.2" y="709" width="38.5" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1408.18" y="735.5" >Vec..</text>
</g>
<g >
<title>Vector::operator* (37,213,710 samples, 0.55%)</title><rect x="1392.2" y="709" width="13.0" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1395.17" y="735.5" ></text>
</g>
<g >
<title>Ray::Ray (34,196,182 samples, 0.50%)</title><rect x="1623.5" y="661" width="12.0" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1626.55" y="687.5" ></text>
</g>
<g >
<title>Sphere::getLightIntersection (38,457,168 samples, 0.56%)</title><rect x="1969.4" y="709" width="13.4" height="47.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1972.39" y="735.5" ></text>
</g>
<g >
<title>Box::getIntersection (1,578,664,742 samples, 23.19%)</title><rect x="439.7" y="805" width="551.8" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="442.67" y="831.5" >Box::getIntersection</text>
</g>
<g >
<title>all (6,808,036,287 samples, 100%)</title><rect x="10.0" y="997" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="565" width="2.3" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2376.53" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="469" width="2.3" height="47.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="2376.53" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (33,612,866 samples, 0.49%)</title><rect x="80.6" y="661" width="11.7" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="83.57" y="687.5" ></text>
</g>
<g >
<title>calcColor (554,948,170 samples, 8.15%)</title><rect x="1467.0" y="757" width="194.0" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1470.04" y="783.5" >calcColor</text>
</g>
<g >
<title>Plane::getIntersection (37,949,055 samples, 0.56%)</title><rect x="1505.7" y="661" width="13.2" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1508.67" y="687.5" ></text>
</g>
<g >
<title>Vector::dot (272,013,938 samples, 4.00%)</title><rect x="1706.0" y="661" width="95.1" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1708.97" y="687.5" >Vector::dot</text>
</g>
<g >
<title>[libc.so.6] (2,870,937 samples, 0.04%)</title><rect x="2372.5" y="661" width="1.0" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="2375.52" y="687.5" ></text>
</g>
<g >
<title>Vector::dot (78,297,044 samples, 1.15%)</title><rect x="2129.0" y="709" width="27.4" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2132.02" y="735.5" >V..</text>
</g>
<g >
<title>Vector::operator- (75,109,917 samples, 1.10%)</title><rect x="1903.4" y="661" width="26.3" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1906.41" y="687.5" >V..</text>
</g>
<g >
<title>solveScalers (76,356,871 samples, 1.12%)</title><rect x="1530.9" y="661" width="26.7" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1533.89" y="687.5" >s..</text>
</g>
<g >
<title>Box::getLightIntersection (38,184,163 samples, 0.56%)</title><rect x="991.5" y="805" width="13.4" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="994.55" y="831.5" ></text>
</g>
<g >
<title>Vector::Vector (34,636,559 samples, 0.51%)</title><rect x="1635.5" y="613" width="12.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1638.50" y="639.5" ></text>
</g>
<g >
<title>usb_submit_urb (33,612,866 samples, 0.49%)</title><rect x="80.6" y="277" width="11.7" height="47.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="83.57" y="303.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx (33,612,866 samples, 0.49%)</title><rect x="80.6" y="85" width="11.7" height="47.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="83.57" y="111.5" ></text>
</g>
<g >
<title>solveScalers (595,608,302 samples, 8.75%)</title><rect x="783.3" y="757" width="208.2" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="786.33" y="783.5" >solveScalers</text>
</g>
<g >
<title>Ray::Ray (76,153,736 samples, 1.12%)</title><rect x="2196.7" y="757" width="26.6" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="2199.68" y="783.5" >R..</text>
</g>
<g >
<title>usb_hcd_submit_urb (33,612,866 samples, 0.49%)</title><rect x="80.6" y="229" width="11.7" height="47.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="83.57" y="255.5" ></text>
</g>
<g >
<title>Vector::Vector (40,822,011 samples, 0.60%)</title><rect x="1982.8" y="661" width="14.3" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1985.84" y="687.5" ></text>
</g>
<g >
<title>Plane::getLightIntersection (38,955,274 samples, 0.57%)</title><rect x="2183.1" y="757" width="13.6" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="2186.06" y="783.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="325" width="2.3" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="2376.53" y="351.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (2,830,812 samples, 0.04%)</title><rect x="2372.5" y="181" width="1.0" height="47.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="2375.52" y="207.5" ></text>
</g>
<g >
<title>do_exit (33,293,641 samples, 0.49%)</title><rect x="92.4" y="661" width="11.7" height="47.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="95.42" y="687.5" ></text>
</g>
<g >
<title>Vector::Vector (74,873,182 samples, 1.10%)</title><rect x="1417.5" y="661" width="26.2" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1420.50" y="687.5" >V..</text>
</g>
<g >
<title>Plane::getColor (36,899,119 samples, 0.54%)</title><rect x="1018.4" y="805" width="12.9" height="47.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1021.38" y="831.5" ></text>
</g>
<g >
<title>x64_sys_call (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="517" width="2.3" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="2376.53" y="543.5" ></text>
</g>
<g >
<title>__vm_munmap (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="421" width="2.3" height="47.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="2376.53" y="447.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (33,612,866 samples, 0.49%)</title><rect x="80.6" y="181" width="11.7" height="47.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="83.57" y="207.5" ></text>
</g>
<g >
<title>solveScalers (78,953,349 samples, 1.16%)</title><rect x="1929.7" y="661" width="27.6" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1932.66" y="687.5" >s..</text>
</g>
<g >
<title>rwsem_optimistic_spin (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="277" width="2.3" height="47.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="2376.53" y="303.5" ></text>
</g>
<g >
<title>Vector::dot (242,465,821 samples, 3.56%)</title><rect x="1298.6" y="661" width="84.7" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1301.55" y="687.5" >Vector::dot</text>
</g>
<g >
<title>Vector::dot (134,159,832 samples, 1.97%)</title><rect x="627.9" y="709" width="46.9" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="630.93" y="735.5" >Vect..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,504,165 samples, 0.10%)</title><rect x="2373.5" y="613" width="2.3" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="2376.53" y="639.5" ></text>
</g>
<g >
<title>Vector::mag2 (33,620,001 samples, 0.49%)</title><rect x="2223.3" y="709" width="11.8" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="2226.30" y="735.5" ></text>
</g>
</g>
</svg>
