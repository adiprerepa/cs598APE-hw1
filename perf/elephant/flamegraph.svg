<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="934" onload="init(evt)" viewBox="0 0 2400 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="934.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="917" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="917" > </text>
<g id="frames">
<g >
<title>common_interrupt (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="613" width="1.0" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="2366.66" y="639.5" ></text>
</g>
<g >
<title>[unknown]  (5,416,946 samples, 0.01%)</title><rect x="17.4" y="709" width="0.1" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="20.41" y="735.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (95,195,354 samples, 0.09%)</title><rect x="1421.5" y="517" width="2.1" height="47.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1424.52" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="469" width="1.1" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1144.21" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="565" width="1.1" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1144.21" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="277" width="1.0" height="47.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="19.28" y="303.5" ></text>
</g>
<g >
<title>ath11k_dp_rxbufs_replenish (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="181" width="1.0" height="47.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1423.47" y="207.5" ></text>
</g>
<g >
<title>do_fault (61,856,536 samples, 0.06%)</title><rect x="13.8" y="229" width="1.4" height="47.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="16.80" y="255.5" ></text>
</g>
<g >
<title>ath11k_dp_process_rx (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="229" width="1.0" height="47.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1423.47" y="255.5" ></text>
</g>
<g >
<title>run_timer_softirq (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="421" width="1.0" height="47.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1145.27" y="447.5" ></text>
</g>
<g >
<title>filemap_map_pages (47,934,049 samples, 0.04%)</title><rect x="16.3" y="85" width="1.0" height="47.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="19.28" y="111.5" ></text>
</g>
<g >
<title>Triangle::getIntersection (12,637,356,961 samples, 11.78%)</title><rect x="1143.3" y="709" width="280.3" height="47.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1146.32" y="735.5" >Triangle::getIntersection</text>
</g>
<g >
<title>__hrtimer_run_queues (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="469" width="1.1" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1424.52" y="495.5" ></text>
</g>
<g >
<title>[unknown]  (326,674,084 samples, 0.30%)</title><rect x="10.1" y="757" width="7.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.10" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="325" width="1.0" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.28" y="351.5" ></text>
</g>
<g >
<title>fq_flush_iotlb (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="229" width="1.0" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1145.27" y="255.5" ></text>
</g>
<g >
<title>read_tsc (47,572,092 samples, 0.04%)</title><rect x="1422.6" y="373" width="1.0" height="47.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1425.57" y="399.5" ></text>
</g>
<g >
<title>Plane::getIntersection (2,781,535,030 samples, 2.59%)</title><rect x="19.7" y="709" width="61.7" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="22.73" y="735.5" >Plane:..</text>
</g>
<g >
<title>handle_softirqs (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="469" width="1.0" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1423.47" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="421" width="1.1" height="47.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="2328.70" y="447.5" ></text>
</g>
<g >
<title>asm_common_interrupt (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="661" width="1.0" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="2366.66" y="687.5" ></text>
</g>
<g >
<title>find_busiest_group (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="277" width="1.0" height="47.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="2329.75" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="469" width="1.0" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="2329.75" y="495.5" ></text>
</g>
<g >
<title>[unknown]  (326,182,753 samples, 0.30%)</title><rect x="10.1" y="709" width="7.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.10" y="735.5" ></text>
</g>
<g >
<title>do_exit (46,582,222 samples, 0.04%)</title><rect x="18.7" y="517" width="1.0" height="47.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="21.68" y="543.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="517" width="1.0" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1145.27" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (61,856,536 samples, 0.06%)</title><rect x="13.8" y="133" width="1.4" height="47.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="16.80" y="159.5" ></text>
</g>
<g >
<title>exc_page_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="421" width="1.0" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="19.28" y="447.5" ></text>
</g>
<g >
<title>try_charge_memcg (49,607,451 samples, 0.05%)</title><rect x="15.2" y="85" width="1.1" height="47.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="18.18" y="111.5" ></text>
</g>
<g >
<title>ffmpeg (434,576,958 samples, 0.41%)</title><rect x="10.1" y="805" width="9.6" height="47.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="13.07" y="831.5" ></text>
</g>
<g >
<title>exit_mmap (46,582,222 samples, 0.04%)</title><rect x="18.7" y="325" width="1.0" height="47.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="21.68" y="351.5" ></text>
</g>
<g >
<title>ath11k_dp_tx_complete_msdu (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="181" width="1.0" height="47.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="2366.66" y="207.5" ></text>
</g>
<g >
<title>do_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="181" width="1.0" height="47.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="19.28" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="421" width="1.1" height="47.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1144.21" y="447.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="229" width="1.0" height="47.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="2329.75" y="255.5" ></text>
</g>
<g >
<title>ath11k_dp_service_srng (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="277" width="1.0" height="47.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1423.47" y="303.5" ></text>
</g>
<g >
<title>handle_pte_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="229" width="1.0" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="19.28" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (95,154,765 samples, 0.09%)</title><rect x="2325.7" y="661" width="2.1" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="2328.70" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (95,198,201 samples, 0.09%)</title><rect x="1421.5" y="613" width="2.1" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1424.52" y="639.5" ></text>
</g>
<g >
<title>finish_fault (61,856,536 samples, 0.06%)</title><rect x="13.8" y="181" width="1.4" height="47.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="16.80" y="207.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (46,582,222 samples, 0.04%)</title><rect x="18.7" y="133" width="1.0" height="47.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="21.68" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="373" width="1.1" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="2328.70" y="399.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="517" width="1.0" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="2366.66" y="543.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="325" width="1.1" height="47.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1424.52" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (326,172,953 samples, 0.30%)</title><rect x="10.1" y="565" width="7.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.11" y="591.5" ></text>
</g>
<g >
<title>net_rx_action (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="421" width="1.0" height="47.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1423.47" y="447.5" ></text>
</g>
<g >
<title>_compound_head (46,582,222 samples, 0.04%)</title><rect x="18.7" y="85" width="1.0" height="47.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="21.68" y="111.5" ></text>
</g>
<g >
<title>calcColor (1,044,018,167 samples, 0.97%)</title><rect x="2365.8" y="709" width="23.1" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="2368.76" y="735.5" >c..</text>
</g>
<g >
<title>[unknown]  (55,210,087 samples, 0.05%)</title><rect x="12.6" y="421" width="1.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.57" y="447.5" ></text>
</g>
<g >
<title>Vector::operator- (1,711,118,167 samples, 1.59%)</title><rect x="2327.8" y="709" width="38.0" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2330.81" y="735.5" >Vec..</text>
</g>
<g >
<title>amd_iommu_flush_iotlb_all (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="181" width="1.0" height="47.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1145.27" y="207.5" ></text>
</g>
<g >
<title>Plane::solveScalers (47,873,266,953 samples, 44.62%)</title><rect x="81.4" y="709" width="1061.9" height="47.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="84.42" y="735.5" >Plane::solveScalers</text>
</g>
<g >
<title>hrtimer_interrupt (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="517" width="1.1" height="47.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1144.21" y="543.5" ></text>
</g>
<g >
<title>handle_softirqs (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="469" width="1.0" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="2366.66" y="495.5" ></text>
</g>
<g >
<title>consume_stock (49,607,451 samples, 0.05%)</title><rect x="15.2" y="37" width="1.1" height="47.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="18.18" y="63.5" ></text>
</g>
<g >
<title>handle_softirqs (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="469" width="1.0" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1145.27" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (95,198,201 samples, 0.09%)</title><rect x="1421.5" y="661" width="2.1" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1424.52" y="687.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (95,195,354 samples, 0.09%)</title><rect x="1421.5" y="565" width="2.1" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1424.52" y="591.5" ></text>
</g>
<g >
<title>ath11k_dp_service_srng (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="277" width="1.0" height="47.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="2366.66" y="303.5" ></text>
</g>
<g >
<title>update_load_avg (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="181" width="1.1" height="47.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1144.21" y="207.5" ></text>
</g>
<g >
<title>atan2f32x (47,443,366 samples, 0.04%)</title><rect x="2387.9" y="661" width="1.0" height="47.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="2390.87" y="687.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="517" width="1.0" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1423.47" y="543.5" ></text>
</g>
<g >
<title>unmap_vmas (46,582,222 samples, 0.04%)</title><rect x="18.7" y="277" width="1.0" height="47.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="21.68" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="421" width="1.1" height="47.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1424.52" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="517" width="1.1" height="47.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="2328.70" y="543.5" ></text>
</g>
<g >
<title>iommu_completion_wait.isra.0 (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="85" width="1.0" height="47.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1145.27" y="111.5" ></text>
</g>
<g >
<title>scheduler_tick (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="277" width="1.1" height="47.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1144.21" y="303.5" ></text>
</g>
<g >
<title>load_balance (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="325" width="1.0" height="47.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="2329.75" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (47,362,391 samples, 0.04%)</title><rect x="2364.7" y="661" width="1.1" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="2367.71" y="687.5" ></text>
</g>
<g >
<title>__napi_poll (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="373" width="1.0" height="47.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="2366.66" y="399.5" ></text>
</g>
<g >
<title>main.exe (106,858,894,156 samples, 99.59%)</title><rect x="19.7" y="805" width="2370.3" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="22.71" y="831.5" >main.exe</text>
</g>
<g >
<title>handle_pte_fault (111,463,987 samples, 0.10%)</title><rect x="13.8" y="277" width="2.5" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="16.80" y="303.5" ></text>
</g>
<g >
<title>[unknown]  (326,172,953 samples, 0.30%)</title><rect x="10.1" y="613" width="7.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.11" y="639.5" ></text>
</g>
<g >
<title>amd_iommu_domain_flush_pages (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="133" width="1.0" height="47.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1145.27" y="159.5" ></text>
</g>
<g >
<title>net_rx_action (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="421" width="1.0" height="47.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="2366.66" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (111,463,987 samples, 0.10%)</title><rect x="13.8" y="469" width="2.5" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="16.80" y="495.5" ></text>
</g>
<g >
<title>Vector::Vector (425,447,163 samples, 0.40%)</title><rect x="1425.7" y="709" width="9.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1428.72" y="735.5" ></text>
</g>
<g >
<title>rebalance_domains (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="373" width="1.0" height="47.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="2329.75" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (94,897,162 samples, 0.09%)</title><rect x="1141.2" y="613" width="2.1" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1144.21" y="639.5" ></text>
</g>
<g >
<title>ath11k_pcic_ext_grp_napi_poll (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="325" width="1.0" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="2366.66" y="351.5" ></text>
</g>
<g >
<title>update_process_times (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="325" width="1.1" height="47.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1144.21" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (111,463,987 samples, 0.10%)</title><rect x="13.8" y="517" width="2.5" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="16.80" y="543.5" ></text>
</g>
<g >
<title>ath11k_pcic_ext_grp_napi_poll (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="325" width="1.0" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1423.47" y="351.5" ></text>
</g>
<g >
<title>exit_mm (46,582,222 samples, 0.04%)</title><rect x="18.7" y="469" width="1.0" height="47.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="21.68" y="495.5" ></text>
</g>
<g >
<title>task_tick_fair (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="229" width="1.1" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1144.21" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="373" width="1.0" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="19.28" y="399.5" ></text>
</g>
<g >
<title>clockevents_program_event (47,572,092 samples, 0.04%)</title><rect x="1422.6" y="421" width="1.0" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1425.57" y="447.5" ></text>
</g>
<g >
<title>sched_clock_tick (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="277" width="1.1" height="47.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="2328.70" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (46,582,222 samples, 0.04%)</title><rect x="18.7" y="181" width="1.0" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="21.68" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (95,154,765 samples, 0.09%)</title><rect x="2325.7" y="613" width="2.1" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="2328.70" y="639.5" ></text>
</g>
<g >
<title>common_interrupt (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="613" width="1.0" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1423.47" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (111,463,987 samples, 0.10%)</title><rect x="13.8" y="373" width="2.5" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.80" y="399.5" ></text>
</g>
<g >
<title>wp_page_copy (49,607,451 samples, 0.05%)</title><rect x="15.2" y="181" width="1.1" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="18.18" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="469" width="1.0" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="19.28" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,073,084 samples, 0.04%)</title><rect x="18.7" y="709" width="1.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.67" y="735.5" ></text>
</g>
<g >
<title>asm_common_interrupt (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="661" width="1.0" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1423.47" y="687.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (49,607,451 samples, 0.05%)</title><rect x="15.2" y="133" width="1.1" height="47.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="18.18" y="159.5" ></text>
</g>
<g >
<title>[unknown] (106,858,011,328 samples, 99.59%)</title><rect x="19.7" y="757" width="2370.3" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.73" y="783.5" >[unknown]</text>
</g>
<g >
<title>[unknown]  (326,172,953 samples, 0.30%)</title><rect x="10.1" y="661" width="7.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.11" y="687.5" ></text>
</g>
<g >
<title>do_wp_page (49,607,451 samples, 0.05%)</title><rect x="15.2" y="229" width="1.1" height="47.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="18.18" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (47,934,049 samples, 0.04%)</title><rect x="16.3" y="517" width="1.0" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="19.28" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (111,463,987 samples, 0.10%)</title><rect x="13.8" y="325" width="2.5" height="47.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.80" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (111,463,987 samples, 0.10%)</title><rect x="13.8" y="421" width="2.5" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="16.80" y="447.5" ></text>
</g>
<g >
<title>all (107,297,524,441 samples, 100%)</title><rect x="10.0" y="853" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>run_rebalance_domains (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="421" width="1.0" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="2329.75" y="447.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="133" width="1.1" height="47.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1144.21" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,073,084 samples, 0.04%)</title><rect x="18.7" y="757" width="1.0" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.67" y="783.5" ></text>
</g>
<g >
<title>getLight (47,575,558 samples, 0.04%)</title><rect x="2388.9" y="709" width="1.1" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="2391.92" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="469" width="1.1" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="2328.70" y="495.5" ></text>
</g>
<g >
<title>__run_timers (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="373" width="1.0" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1145.27" y="399.5" ></text>
</g>
<g >
<title>[unknown]  (166,458,719 samples, 0.16%)</title><rect x="10.1" y="469" width="3.7" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.11" y="495.5" ></text>
</g>
<g >
<title>[unknown]  (55,210,087 samples, 0.05%)</title><rect x="12.6" y="373" width="1.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.57" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="565" width="1.1" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="2328.70" y="591.5" ></text>
</g>
<g >
<title>x64_sys_call (47,073,084 samples, 0.04%)</title><rect x="18.7" y="661" width="1.0" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="21.67" y="687.5" ></text>
</g>
<g >
<title>ath11k_dp_tx_completion_handler (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="229" width="1.0" height="47.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="2366.66" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="565" width="1.0" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1423.47" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (94,897,162 samples, 0.09%)</title><rect x="1141.2" y="661" width="2.1" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1144.21" y="687.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="181" width="1.1" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1424.52" y="207.5" ></text>
</g>
<g >
<title>[unknown]  (166,769,665 samples, 0.16%)</title><rect x="10.1" y="517" width="3.7" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.11" y="543.5" ></text>
</g>
<g >
<title>[unknown] (59,481,848 samples, 0.06%)</title><rect x="17.3" y="757" width="1.4" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="20.35" y="783.5" ></text>
</g>
<g >
<title>irq_exit_rcu (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="565" width="1.0" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1145.27" y="591.5" ></text>
</g>
<g >
<title>Triangle::getLightIntersection (94,426,793 samples, 0.09%)</title><rect x="1423.6" y="709" width="2.1" height="47.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1426.63" y="735.5" ></text>
</g>
<g >
<title>idr_alloc_u32 (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="85" width="1.0" height="47.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1423.47" y="111.5" ></text>
</g>
<g >
<title>irq_exit_rcu (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="565" width="1.0" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2366.66" y="591.5" ></text>
</g>
<g >
<title>__napi_poll (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="373" width="1.0" height="47.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1423.47" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="565" width="1.0" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2329.75" y="591.5" ></text>
</g>
<g >
<title>ath11k_dp_tx_update_txcompl (47,589,437 samples, 0.04%)</title><rect x="2363.7" y="133" width="1.0" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="2366.66" y="159.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="373" width="1.1" height="47.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1424.52" y="399.5" ></text>
</g>
<g >
<title>av_codec_is_encoder (47,478,540 samples, 0.04%)</title><rect x="17.5" y="709" width="1.1" height="47.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="20.55" y="735.5" ></text>
</g>
<g >
<title>call_timer_fn (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="325" width="1.0" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.27" y="351.5" ></text>
</g>
<g >
<title>do_read_fault (47,934,049 samples, 0.04%)</title><rect x="16.3" y="133" width="1.0" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.28" y="159.5" ></text>
</g>
<g >
<title>__mmput (46,582,222 samples, 0.04%)</title><rect x="18.7" y="373" width="1.0" height="47.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="21.68" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (47,603,607 samples, 0.04%)</title><rect x="1141.2" y="373" width="1.1" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1144.21" y="399.5" ></text>
</g>
<g >
<title>timekeeping_advance (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="229" width="1.1" height="47.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1424.52" y="255.5" ></text>
</g>
<g >
<title>idr_alloc (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="133" width="1.0" height="47.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1423.47" y="159.5" ></text>
</g>
<g >
<title>fq_flush_timeout (47,293,555 samples, 0.04%)</title><rect x="1142.3" y="277" width="1.0" height="47.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1145.27" y="303.5" ></text>
</g>
<g >
<title>idr_get_free (47,170,634 samples, 0.04%)</title><rect x="1420.5" y="37" width="1.0" height="47.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1423.47" y="63.5" ></text>
</g>
<g >
<title>tick_program_event (47,572,092 samples, 0.04%)</title><rect x="1422.6" y="469" width="1.0" height="47.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1425.57" y="495.5" ></text>
</g>
<g >
<title>unmap_single_vma (46,582,222 samples, 0.04%)</title><rect x="18.7" y="229" width="1.0" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="21.68" y="255.5" ></text>
</g>
<g >
<title>Vector::operator+ (569,790,975 samples, 0.53%)</title><rect x="2315.2" y="709" width="12.6" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="2318.17" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (46,582,222 samples, 0.04%)</title><rect x="18.7" y="613" width="1.0" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.68" y="639.5" ></text>
</g>
<g >
<title>mmput (46,582,222 samples, 0.04%)</title><rect x="18.7" y="421" width="1.0" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="21.68" y="447.5" ></text>
</g>
<g >
<title>Vector::operator* (33,524,383,907 samples, 31.24%)</title><rect x="1571.6" y="709" width="743.6" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1574.56" y="735.5" >Vector::operator*</text>
</g>
<g >
<title>do_group_exit (46,582,222 samples, 0.04%)</title><rect x="18.7" y="565" width="1.0" height="47.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="21.68" y="591.5" ></text>
</g>
<g >
<title>update_process_times (47,564,686 samples, 0.04%)</title><rect x="2325.7" y="325" width="1.1" height="47.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="2328.70" y="351.5" ></text>
</g>
<g >
<title>set_pte_range (47,934,049 samples, 0.04%)</title><rect x="16.3" y="37" width="1.0" height="47.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="19.28" y="63.5" ></text>
</g>
<g >
<title>Vector::dot (6,149,088,192 samples, 5.73%)</title><rect x="1435.2" y="709" width="136.4" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1438.16" y="735.5" >Vector::dot</text>
</g>
<g >
<title>__irq_exit_rcu (47,590,079 samples, 0.04%)</title><rect x="2326.8" y="517" width="1.0" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="2329.75" y="543.5" ></text>
</g>
<g >
<title>update_wall_time (47,623,262 samples, 0.04%)</title><rect x="1421.5" y="277" width="1.1" height="47.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1424.52" y="303.5" ></text>
</g>
</g>
</svg>
