<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="1462" onload="init(evt)" viewBox="0 0 2400 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="1462.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1445" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="1445" > </text>
<g id="frames">
<g >
<title>amdgpu_get_vblank_counter_kms (433,023,257 samples, 0.01%)</title><rect x="2365.0" y="373" width="0.1" height="47.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="2367.96" y="399.5" ></text>
</g>
<g >
<title>account_process_tick (477,462,822 samples, 0.01%)</title><rect x="2377.9" y="757" width="0.2" height="47.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="2380.91" y="783.5" ></text>
</g>
<g >
<title>Vector::operator* (10,407,790,398 samples, 0.15%)</title><rect x="2279.7" y="1093" width="3.7" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2282.73" y="1119.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (379,372,285 samples, 0.01%)</title><rect x="2372.0" y="757" width="0.1" height="47.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="2374.96" y="783.5" ></text>
</g>
<g >
<title>do_anonymous_page (10,814,921,393 samples, 0.16%)</title><rect x="2371.3" y="853" width="3.8" height="47.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="2374.29" y="879.5" ></text>
</g>
<g >
<title>[unknown]  (2,806,820,799 samples, 0.04%)</title><rect x="2361.6" y="997" width="0.9" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="2364.56" y="1023.5" ></text>
</g>
<g >
<title>irqentry_exit (327,571,520 samples, 0.00%)</title><rect x="2375.5" y="1045" width="0.1" height="47.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="2378.47" y="1071.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (725,920,725 samples, 0.01%)</title><rect x="2380.1" y="613" width="0.2" height="47.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="2383.08" y="639.5" ></text>
</g>
<g >
<title>mmput (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="949" width="1.4" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="2391.58" y="975.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (290,024,086 samples, 0.00%)</title><rect x="2365.0" y="277" width="0.1" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="2367.96" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (7,468,498,410 samples, 0.11%)</title><rect x="2378.4" y="757" width="2.6" height="47.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="2381.38" y="783.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12,112,586,759 samples, 0.18%)</title><rect x="2371.0" y="949" width="4.2" height="47.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="2373.95" y="975.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5,115,043,598 samples, 0.08%)</title><rect x="2362.6" y="1045" width="1.8" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="2365.62" y="1071.5" ></text>
</g>
<g >
<title>rcu_core_si (427,614,945 samples, 0.01%)</title><rect x="2381.7" y="901" width="0.2" height="47.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="2384.71" y="927.5" ></text>
</g>
<g >
<title>drm_handle_vblank (1,000,698,782 samples, 0.01%)</title><rect x="2364.9" y="517" width="0.3" height="47.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="2367.89" y="543.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (331,123,734 samples, 0.00%)</title><rect x="2370.0" y="997" width="0.1" height="47.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="2373.01" y="1023.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (326,316,903 samples, 0.00%)</title><rect x="2370.1" y="997" width="0.2" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="2373.14" y="1023.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (475,824,067 samples, 0.01%)</title><rect x="2362.3" y="709" width="0.1" height="47.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="2365.26" y="735.5" ></text>
</g>
<g >
<title>update_curr (670,725,018 samples, 0.01%)</title><rect x="2379.7" y="661" width="0.2" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="2382.69" y="687.5" ></text>
</g>
<g >
<title>delay_halt.part.0 (2,111,500,807 samples, 0.03%)</title><rect x="2382.2" y="421" width="0.7" height="47.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="2385.20" y="447.5" ></text>
</g>
<g >
<title>regmap_readable (286,872,135 samples, 0.00%)</title><rect x="2367.1" y="709" width="0.1" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="2370.07" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="1141" width="1.4" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2391.58" y="1167.5" ></text>
</g>
<g >
<title>update_load_avg (2,243,150,078 samples, 0.03%)</title><rect x="2379.9" y="661" width="0.8" height="47.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="2382.93" y="687.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (1,805,461,965 samples, 0.03%)</title><rect x="2364.8" y="805" width="0.6" height="47.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="2367.78" y="831.5" ></text>
</g>
<g >
<title>dw_reg_read (383,175,129 samples, 0.01%)</title><rect x="2366.3" y="709" width="0.2" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2369.33" y="735.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1,950,612,427 samples, 0.03%)</title><rect x="2377.0" y="805" width="0.7" height="47.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="2380.05" y="831.5" ></text>
</g>
<g >
<title>Vector::dot (16,013,130,003 samples, 0.24%)</title><rect x="2273.1" y="1045" width="5.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2276.08" y="1071.5" ></text>
</g>
<g >
<title>insertionSort (8,606,715,415 samples, 0.13%)</title><rect x="2384.3" y="1141" width="3.0" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="2387.27" y="1167.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (377,089,687 samples, 0.01%)</title><rect x="2374.6" y="613" width="0.2" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="2377.63" y="639.5" ></text>
</g>
<g >
<title>drm_crtc_handle_vblank (1,000,698,782 samples, 0.01%)</title><rect x="2364.9" y="565" width="0.3" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="2367.89" y="591.5" ></text>
</g>
<g >
<title>[unknown]  (177,188,326,546 samples, 2.60%)</title><rect x="2302.5" y="1141" width="62.0" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="2305.55" y="1167.5" >[unkno..</text>
</g>
<g >
<title>irq_exit_rcu (326,316,903 samples, 0.00%)</title><rect x="2370.1" y="1045" width="0.2" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2373.14" y="1071.5" ></text>
</g>
<g >
<title>[unknown]  (513,961,877 samples, 0.01%)</title><rect x="10.0" y="1237" width="0.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (475,519,407 samples, 0.01%)</title><rect x="2378.5" y="709" width="0.2" height="47.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="2381.55" y="735.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1,145,759,888 samples, 0.02%)</title><rect x="2369.6" y="901" width="0.4" height="47.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="2372.57" y="927.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (942,897,553 samples, 0.01%)</title><rect x="2374.5" y="805" width="0.3" height="47.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="2377.46" y="831.5" ></text>
</g>
<g >
<title>optc1_get_crtc_scanoutpos (290,024,086 samples, 0.00%)</title><rect x="2365.0" y="181" width="0.1" height="47.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="2367.96" y="207.5" ></text>
</g>
<g >
<title>_regmap_write (856,595,945 samples, 0.01%)</title><rect x="2369.0" y="757" width="0.3" height="47.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="2372.02" y="783.5" ></text>
</g>
<g >
<title>task_tick_fair (3,299,481,892 samples, 0.05%)</title><rect x="2379.6" y="709" width="1.1" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="2382.59" y="735.5" ></text>
</g>
<g >
<title>irqentry_exit (521,415,087 samples, 0.01%)</title><rect x="2383.2" y="1045" width="0.2" height="47.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="2386.21" y="1071.5" ></text>
</g>
<g >
<title>regmap_write (1,425,724,842 samples, 0.02%)</title><rect x="2369.0" y="805" width="0.5" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="2372.01" y="831.5" ></text>
</g>
<g >
<title>__const_udelay (2,111,500,807 samples, 0.03%)</title><rect x="2382.2" y="517" width="0.7" height="47.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="2385.20" y="543.5" ></text>
</g>
<g >
<title>release_pages (2,309,423,358 samples, 0.03%)</title><rect x="2389.2" y="421" width="0.8" height="47.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="2392.18" y="447.5" ></text>
</g>
<g >
<title>regmap_lock_unlock_none (434,919,042 samples, 0.01%)</title><rect x="2365.5" y="757" width="0.2" height="47.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="2368.51" y="783.5" ></text>
</g>
<g >
<title>regmap_lock_unlock_none (336,372,033 samples, 0.00%)</title><rect x="2367.8" y="805" width="0.1" height="47.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="2370.79" y="831.5" ></text>
</g>
<g >
<title>zap_pte_range (3,537,591,289 samples, 0.05%)</title><rect x="2388.8" y="613" width="1.2" height="47.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="2391.76" y="639.5" ></text>
</g>
<g >
<title>_regmap_read (2,011,160,370 samples, 0.03%)</title><rect x="2367.9" y="757" width="0.7" height="47.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="2370.94" y="783.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (424,461,835 samples, 0.01%)</title><rect x="2389.8" y="373" width="0.2" height="47.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="2392.83" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (614,939,479 samples, 0.01%)</title><rect x="2363.6" y="517" width="0.2" height="47.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="2366.62" y="543.5" ></text>
</g>
<g >
<title>refresh (6,797,257,960,760 samples, 99.93%)</title><rect x="10.2" y="1237" width="2378.4" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.21" y="1263.5" >refresh</text>
</g>
<g >
<title>Vector::operator- (10,543,027,151 samples, 0.16%)</title><rect x="2286.1" y="1093" width="3.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2289.13" y="1119.5" ></text>
</g>
<g >
<title>dw_reg_read (822,806,967 samples, 0.01%)</title><rect x="2366.0" y="661" width="0.3" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2369.05" y="687.5" ></text>
</g>
<g >
<title>exit_mm (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="997" width="1.4" height="47.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="2391.58" y="1023.5" ></text>
</g>
<g >
<title>Vector::Vector (4,525,880,612 samples, 0.07%)</title><rect x="2288.2" y="1045" width="1.6" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2291.22" y="1071.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,351,755,674 samples, 0.03%)</title><rect x="2389.2" y="517" width="0.8" height="47.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="2392.16" y="543.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,325,237,296 samples, 0.02%)</title><rect x="2363.5" y="661" width="0.5" height="47.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="2366.49" y="687.5" ></text>
</g>
<g >
<title>[unknown]  (419,901,719 samples, 0.01%)</title><rect x="10.0" y="1141" width="0.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.03" y="1167.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (433,958,078 samples, 0.01%)</title><rect x="2371.8" y="757" width="0.1" height="47.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="2374.79" y="783.5" ></text>
</g>
<g >
<title>delay_halt_mwaitx (2,064,427,844 samples, 0.03%)</title><rect x="2382.2" y="373" width="0.7" height="47.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="2385.22" y="399.5" ></text>
</g>
<g >
<title>exit_mmap (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="853" width="1.4" height="47.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="2391.58" y="879.5" ></text>
</g>
<g >
<title>do_brk_flags (1,474,493,239 samples, 0.02%)</title><rect x="2361.7" y="709" width="0.6" height="47.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="2364.74" y="735.5" ></text>
</g>
<g >
<title>Vector::operator* (288,343,877 samples, 0.00%)</title><rect x="2302.3" y="1141" width="0.1" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2305.32" y="1167.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (286,650,171 samples, 0.00%)</title><rect x="2376.7" y="901" width="0.1" height="47.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="2379.68" y="927.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,784,614,628 samples, 0.07%)</title><rect x="2362.7" y="949" width="1.7" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="2365.69" y="975.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (472,742,701 samples, 0.01%)</title><rect x="2383.2" y="997" width="0.2" height="47.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="2386.23" y="1023.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,790,171,834 samples, 0.31%)</title><rect x="2376.1" y="1093" width="7.3" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="2379.13" y="1119.5" ></text>
</g>
<g >
<title>amdgpu_crtc_get_scanout_position (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="277" width="0.1" height="47.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="2368.13" y="303.5" ></text>
</g>
<g >
<title>__common_interrupt (15,376,272,888 samples, 0.23%)</title><rect x="2364.8" y="1045" width="5.3" height="47.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="2367.76" y="1071.5" ></text>
</g>
<g >
<title>dm_crtc_high_irq (1,049,561,977 samples, 0.02%)</title><rect x="2364.9" y="661" width="0.3" height="47.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="2367.88" y="687.5" ></text>
</g>
<g >
<title>folio_remove_rmap_ptes (568,339,965 samples, 0.01%)</title><rect x="2389.0" y="565" width="0.2" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="2391.96" y="591.5" ></text>
</g>
<g >
<title>unmap_page_range (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="709" width="1.4" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="2391.58" y="735.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (290,129,593 samples, 0.00%)</title><rect x="2371.5" y="805" width="0.1" height="47.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="2374.45" y="831.5" ></text>
</g>
<g >
<title>native_read_msr (374,820,304 samples, 0.01%)</title><rect x="2379.4" y="565" width="0.1" height="47.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="2382.38" y="591.5" ></text>
</g>
<g >
<title>__get_vblank_counter (478,041,207 samples, 0.01%)</title><rect x="2365.0" y="421" width="0.1" height="47.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="2367.96" y="447.5" ></text>
</g>
<g >
<title>handle_softirqs (3,955,075,725 samples, 0.06%)</title><rect x="2381.7" y="949" width="1.4" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="2384.69" y="975.5" ></text>
</g>
<g >
<title>update_process_times (9,086,049,711 samples, 0.13%)</title><rect x="2377.8" y="805" width="3.2" height="47.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="2380.85" y="831.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (472,555,350 samples, 0.01%)</title><rect x="2389.3" y="373" width="0.1" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="2392.26" y="399.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3,095,467,624 samples, 0.05%)</title><rect x="2371.6" y="805" width="1.0" height="47.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="2374.56" y="831.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (15,638,946,266 samples, 0.23%)</title><rect x="2376.2" y="1045" width="5.5" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="2379.20" y="1071.5" ></text>
</g>
<g >
<title>amdgpu_dm_irq_handler (1,662,526,445 samples, 0.02%)</title><rect x="2364.8" y="709" width="0.6" height="47.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="2367.78" y="735.5" ></text>
</g>
<g >
<title>[unknown]  (90,561,083,438 samples, 1.33%)</title><rect x="2330.9" y="1045" width="31.7" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="2333.90" y="1071.5" >[u..</text>
</g>
<g >
<title>tick_nohz_highres_handler (12,084,973,792 samples, 0.18%)</title><rect x="2376.8" y="901" width="4.2" height="47.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="2379.80" y="927.5" ></text>
</g>
<g >
<title>trigger_load_balance (475,599,216 samples, 0.01%)</title><rect x="2380.7" y="709" width="0.2" height="47.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="2383.75" y="735.5" ></text>
</g>
<g >
<title>rcu_core (427,614,945 samples, 0.01%)</title><rect x="2381.7" y="853" width="0.2" height="47.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="2384.71" y="879.5" ></text>
</g>
<g >
<title>vma_alloc_folio (4,396,859,631 samples, 0.06%)</title><rect x="2372.9" y="757" width="1.6" height="47.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="2375.92" y="783.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="373" width="0.1" height="47.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="2368.13" y="399.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (616,480,893 samples, 0.01%)</title><rect x="2379.1" y="565" width="0.2" height="47.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="2382.12" y="591.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (1,805,461,965 samples, 0.03%)</title><rect x="2364.8" y="757" width="0.6" height="47.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="2367.78" y="783.5" ></text>
</g>
<g >
<title>solveScalers (34,255,871,603 samples, 0.50%)</title><rect x="2289.9" y="1093" width="12.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2292.92" y="1119.5" ></text>
</g>
<g >
<title>i2c_dw_isr (11,808,224,099 samples, 0.17%)</title><rect x="2365.4" y="853" width="4.1" height="47.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="2368.41" y="879.5" ></text>
</g>
<g >
<title>call_timer_fn (3,290,684,923 samples, 0.05%)</title><rect x="2381.9" y="805" width="1.2" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="2384.92" y="831.5" ></text>
</g>
<g >
<title>x64_sys_call (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="1189" width="1.4" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="2391.58" y="1215.5" ></text>
</g>
<g >
<title>dw_reg_read (794,716,214 samples, 0.01%)</title><rect x="2368.6" y="757" width="0.3" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2371.64" y="783.5" ></text>
</g>
<g >
<title>handle_irq_event (14,997,043,094 samples, 0.22%)</title><rect x="2364.8" y="949" width="5.2" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="2367.76" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,128,095,963 samples, 0.06%)</title><rect x="2362.9" y="853" width="1.4" height="47.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="2365.86" y="879.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (523,819,213 samples, 0.01%)</title><rect x="2363.2" y="709" width="0.2" height="47.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="2366.24" y="735.5" ></text>
</g>
<g >
<title>__remove_hrtimer (416,719,503 samples, 0.01%)</title><rect x="2376.5" y="901" width="0.2" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="2379.52" y="927.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (429,014,865 samples, 0.01%)</title><rect x="2374.8" y="805" width="0.1" height="47.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="2377.79" y="831.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="181" width="0.1" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="2368.13" y="207.5" ></text>
</g>
<g >
<title>[unknown]  (171,044,774,942 samples, 2.51%)</title><rect x="2304.7" y="1093" width="59.8" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="2307.67" y="1119.5" >[unkno..</text>
</g>
<g >
<title>do_syscall_64 (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="1237" width="1.4" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2391.58" y="1263.5" ></text>
</g>
<g >
<title>drm_crtc_get_last_vbltimestamp (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="421" width="0.1" height="47.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="2368.13" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages (900,355,008 samples, 0.01%)</title><rect x="2363.5" y="565" width="0.4" height="47.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="2366.54" y="591.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,325,237,296 samples, 0.02%)</title><rect x="2363.5" y="709" width="0.5" height="47.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="2366.49" y="735.5" ></text>
</g>
<g >
<title>try_charge_memcg (617,172,280 samples, 0.01%)</title><rect x="2372.4" y="757" width="0.2" height="47.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="2375.42" y="783.5" ></text>
</g>
<g >
<title>_regmap_read (1,004,192,614 samples, 0.01%)</title><rect x="2366.5" y="709" width="0.4" height="47.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="2369.52" y="735.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2,351,755,674 samples, 0.03%)</title><rect x="2389.2" y="565" width="0.8" height="47.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="2392.16" y="591.5" ></text>
</g>
<g >
<title>ffmpeg (560,543,590 samples, 0.01%)</title><rect x="10.0" y="1333" width="0.2" height="47.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (6,797,304,613,042 samples, 99.93%)</title><rect x="10.2" y="1285" width="2378.4" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.20" y="1311.5" >[unknown]</text>
</g>
<g >
<title>fq_flush_timeout (3,199,100,487 samples, 0.05%)</title><rect x="2382.0" y="757" width="1.1" height="47.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="2384.96" y="783.5" ></text>
</g>
<g >
<title>unmap_single_vma (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="757" width="1.4" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="2391.58" y="783.5" ></text>
</g>
<g >
<title>native_read_msr (330,273,360 samples, 0.00%)</title><rect x="2378.6" y="661" width="0.1" height="47.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="2381.60" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,612,279,472 samples, 0.04%)</title><rect x="2361.6" y="949" width="0.9" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="2364.63" y="975.5" ></text>
</g>
<g >
<title>fq_flush_iotlb (2,587,247,961 samples, 0.04%)</title><rect x="2382.1" y="709" width="0.9" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="2385.10" y="735.5" ></text>
</g>
<g >
<title>regmap_write (1,488,864,796 samples, 0.02%)</title><rect x="2367.3" y="757" width="0.5" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="2370.27" y="783.5" ></text>
</g>
<g >
<title>[unknown]  (513,961,877 samples, 0.01%)</title><rect x="10.0" y="1189" width="0.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>__free_one_page (517,420,060 samples, 0.01%)</title><rect x="2389.5" y="229" width="0.2" height="47.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="2392.54" y="255.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (322,445,705 samples, 0.00%)</title><rect x="2375.3" y="997" width="0.1" height="47.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="2378.32" y="1023.5" ></text>
</g>
<g >
<title>regmap_read (2,456,514,148 samples, 0.04%)</title><rect x="2365.7" y="757" width="0.8" height="47.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="2368.66" y="783.5" ></text>
</g>
<g >
<title>Vector::dot (756,809,271 samples, 0.01%)</title><rect x="2383.8" y="1045" width="0.2" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2386.76" y="1071.5" ></text>
</g>
<g >
<title>common_interrupt (16,086,065,123 samples, 0.24%)</title><rect x="2364.7" y="1093" width="5.6" height="47.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="2367.69" y="1119.5" ></text>
</g>
<g >
<title>lru_add_fn (612,683,546 samples, 0.01%)</title><rect x="2374.5" y="661" width="0.3" height="47.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="2377.54" y="687.5" ></text>
</g>
<g >
<title>__update_load_avg_se (713,588,919 samples, 0.01%)</title><rect x="2380.3" y="613" width="0.3" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2383.33" y="639.5" ></text>
</g>
<g >
<title>amd_iommu_domain_flush_pages (2,493,751,653 samples, 0.04%)</title><rect x="2382.1" y="613" width="0.9" height="47.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="2385.10" y="639.5" ></text>
</g>
<g >
<title>dw_reg_write (519,586,783 samples, 0.01%)</title><rect x="2369.3" y="757" width="0.2" height="47.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="2372.32" y="783.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4,098,697,833 samples, 0.06%)</title><rect x="2381.7" y="1045" width="1.4" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2384.67" y="1071.5" ></text>
</g>
<g >
<title>[unknown]  (513,961,877 samples, 0.01%)</title><rect x="10.0" y="1285" width="0.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (379,245,801 samples, 0.01%)</title><rect x="2389.0" y="517" width="0.1" height="47.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="2391.99" y="543.5" ></text>
</g>
<g >
<title>dm_pflip_high_irq (328,302,774 samples, 0.00%)</title><rect x="2365.2" y="661" width="0.2" height="47.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="2368.24" y="687.5" ></text>
</g>
<g >
<title>exc_page_fault (14,437,318,898 samples, 0.21%)</title><rect x="2370.5" y="1093" width="5.1" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="2373.53" y="1119.5" ></text>
</g>
<g >
<title>dw_reg_read (762,410,873 samples, 0.01%)</title><rect x="2366.6" y="661" width="0.3" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2369.60" y="687.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (290,024,086 samples, 0.00%)</title><rect x="2365.0" y="229" width="0.1" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="2367.96" y="255.5" ></text>
</g>
<g >
<title>alloc_anon_folio (4,583,439,125 samples, 0.07%)</title><rect x="2372.9" y="805" width="1.6" height="47.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="2375.86" y="831.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,351,755,674 samples, 0.03%)</title><rect x="2389.2" y="469" width="0.8" height="47.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="2392.16" y="495.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;double&gt;::infinity (2,714,056,716 samples, 0.04%)</title><rect x="2387.4" y="1141" width="1.0" height="47.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="2390.45" y="1167.5" ></text>
</g>
<g >
<title>rmqueue (759,611,021 samples, 0.01%)</title><rect x="2374.1" y="565" width="0.2" height="47.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="2377.06" y="591.5" ></text>
</g>
<g >
<title>timekeeping_advance (1,615,628,229 samples, 0.02%)</title><rect x="2377.2" y="709" width="0.5" height="47.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="2380.17" y="735.5" ></text>
</g>
<g >
<title>_regmap_read (1,544,703,876 samples, 0.02%)</title><rect x="2365.8" y="709" width="0.5" height="47.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="2368.79" y="735.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (15,045,550,935 samples, 0.22%)</title><rect x="2370.3" y="1141" width="5.3" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="2373.32" y="1167.5" ></text>
</g>
<g >
<title>do_user_addr_fault (13,341,951,760 samples, 0.20%)</title><rect x="2370.8" y="1045" width="4.7" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="2373.79" y="1071.5" ></text>
</g>
<g >
<title>folio_add_lru (286,318,097 samples, 0.00%)</title><rect x="2364.0" y="661" width="0.1" height="47.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="2366.95" y="687.5" ></text>
</g>
<g >
<title>x64_sys_call (2,471,903,133 samples, 0.04%)</title><rect x="2361.7" y="853" width="0.8" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="2364.68" y="879.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,372,851,613 samples, 0.05%)</title><rect x="2363.0" y="757" width="1.2" height="47.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="2366.02" y="783.5" ></text>
</g>
<g >
<title>sync_regs (374,999,044 samples, 0.01%)</title><rect x="2388.4" y="1141" width="0.1" height="47.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="2391.40" y="1167.5" ></text>
</g>
<g >
<title>__mmput (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="901" width="1.4" height="47.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="2391.58" y="927.5" ></text>
</g>
<g >
<title>handle_pte_fault (11,348,039,398 samples, 0.17%)</title><rect x="2371.2" y="901" width="4.0" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="2374.20" y="927.5" ></text>
</g>
<g >
<title>solveScalers (423,813,211 samples, 0.01%)</title><rect x="2387.3" y="1141" width="0.1" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2390.28" y="1167.5" ></text>
</g>
<g >
<title>i2c_dw_xfer_msg (1,726,335,421 samples, 0.03%)</title><rect x="2367.2" y="805" width="0.6" height="47.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="2370.19" y="831.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp_internal (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="325" width="0.1" height="47.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="2368.13" y="351.5" ></text>
</g>
<g >
<title>do_exit (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="1045" width="1.4" height="47.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="2391.58" y="1071.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,171,703,700 samples, 0.19%)</title><rect x="2376.5" y="949" width="4.6" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="2379.47" y="975.5" ></text>
</g>
<g >
<title>regmap_read (3,141,236,314 samples, 0.05%)</title><rect x="2367.9" y="805" width="1.1" height="47.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="2370.91" y="831.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (895,226,124 samples, 0.01%)</title><rect x="2372.1" y="757" width="0.3" height="47.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="2375.09" y="783.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (3,399,132,892 samples, 0.05%)</title><rect x="2373.2" y="709" width="1.2" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2376.22" y="735.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (286,318,097 samples, 0.00%)</title><rect x="2364.0" y="709" width="0.1" height="47.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="2366.95" y="735.5" ></text>
</g>
<g >
<title>Triangle::getIntersection (2,579,065,294 samples, 0.04%)</title><rect x="10.2" y="1189" width="0.9" height="47.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.23" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,518,728,584 samples, 0.04%)</title><rect x="2361.7" y="901" width="0.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2364.66" y="927.5" ></text>
</g>
<g >
<title>unmap_vmas (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="805" width="1.4" height="47.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="2391.58" y="831.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (333,077,825 samples, 0.00%)</title><rect x="2380.8" y="661" width="0.1" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="2383.80" y="687.5" ></text>
</g>
<g >
<title>amdgpu_dm_crtc_handle_vblank (1,000,698,782 samples, 0.01%)</title><rect x="2364.9" y="613" width="0.3" height="47.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="2367.89" y="639.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (659,206,535 samples, 0.01%)</title><rect x="2389.5" y="277" width="0.2" height="47.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="2392.50" y="303.5" ></text>
</g>
<g >
<title>Vector::dot (2,520,166,055 samples, 0.04%)</title><rect x="2278.9" y="1093" width="0.8" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2281.85" y="1119.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2,405,836,159 samples, 0.04%)</title><rect x="2378.7" y="709" width="0.9" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2381.73" y="735.5" ></text>
</g>
<g >
<title>getLight (2,042,104,690 samples, 0.03%)</title><rect x="2383.6" y="1141" width="0.7" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="2386.56" y="1167.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="229" width="0.1" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2368.13" y="255.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (523,305,741 samples, 0.01%)</title><rect x="2374.1" y="517" width="0.2" height="47.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="2377.13" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (578,989,239 samples, 0.01%)</title><rect x="11.2" y="1189" width="0.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.16" y="1215.5" ></text>
</g>
<g >
<title>handle_softirqs (326,316,903 samples, 0.00%)</title><rect x="2370.1" y="949" width="0.2" height="47.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="2373.14" y="975.5" ></text>
</g>
<g >
<title>run_timer_softirq (3,386,494,224 samples, 0.05%)</title><rect x="2381.9" y="901" width="1.2" height="47.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="2384.89" y="927.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (847,838,723 samples, 0.01%)</title><rect x="2374.5" y="709" width="0.3" height="47.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="2377.48" y="735.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="133" width="0.1" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="2368.13" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (9,417,163,233 samples, 0.14%)</title><rect x="2377.7" y="853" width="3.3" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="2380.73" y="879.5" ></text>
</g>
<g >
<title>all (6,801,923,676,153 samples, 100%)</title><rect x="10.0" y="1381" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>_regmap_write (667,790,503 samples, 0.01%)</title><rect x="2367.4" y="709" width="0.3" height="47.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="2370.42" y="735.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (286,318,097 samples, 0.00%)</title><rect x="2364.0" y="613" width="0.1" height="47.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="2366.95" y="639.5" ></text>
</g>
<g >
<title>i2c_dw_read_clear_intrbits (1,905,227,271 samples, 0.03%)</title><rect x="2366.5" y="805" width="0.7" height="47.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="2369.52" y="831.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (15,308,989,693 samples, 0.23%)</title><rect x="2376.3" y="997" width="5.4" height="47.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="2379.30" y="1023.5" ></text>
</g>
<g >
<title>do_group_exit (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="1093" width="1.4" height="47.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="2391.58" y="1119.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="661" width="1.4" height="47.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="2391.58" y="687.5" ></text>
</g>
<g >
<title>Vector::Vector (4,442,991,983 samples, 0.07%)</title><rect x="2281.8" y="1045" width="1.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2284.79" y="1071.5" ></text>
</g>
<g >
<title>update_wall_time (1,806,656,184 samples, 0.03%)</title><rect x="2377.1" y="757" width="0.6" height="47.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="2380.10" y="783.5" ></text>
</g>
<g >
<title>i2c_dw_read (3,127,567,699 samples, 0.05%)</title><rect x="2365.4" y="805" width="1.1" height="47.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="2368.43" y="831.5" ></text>
</g>
<g >
<title>Plane::getIntersection (1,098,838,117 samples, 0.02%)</title><rect x="2255.6" y="1141" width="0.4" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="2258.57" y="1167.5" ></text>
</g>
<g >
<title>calcColor (6,793,863,951,717 samples, 99.88%)</title><rect x="11.4" y="1189" width="2377.2" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="14.38" y="1215.5" >calcColor</text>
</g>
<g >
<title>tick_sched_do_timer (2,094,549,736 samples, 0.03%)</title><rect x="2377.0" y="853" width="0.7" height="47.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="2380.00" y="879.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (331,843,340 samples, 0.00%)</title><rect x="2374.8" y="757" width="0.1" height="47.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="2377.81" y="783.5" ></text>
</g>
<g >
<title>__alloc_pages (2,355,373,150 samples, 0.03%)</title><rect x="2373.5" y="661" width="0.8" height="47.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="2376.52" y="687.5" ></text>
</g>
<g >
<title>Plane::getIntersection (33,683,381,340 samples, 0.50%)</title><rect x="2267.0" y="1093" width="11.8" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="2269.98" y="1119.5" ></text>
</g>
<g >
<title>asm_common_interrupt (16,179,329,299 samples, 0.24%)</title><rect x="2364.7" y="1141" width="5.6" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="2367.66" y="1167.5" ></text>
</g>
<g >
<title>Triangle::getIntersection (132,311,124,773 samples, 1.95%)</title><rect x="2256.0" y="1141" width="46.3" height="47.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="2258.96" y="1167.5" >Tria..</text>
</g>
<g >
<title>Triangle::getLightIntersection (1,566,727,942 samples, 0.02%)</title><rect x="2383.6" y="1093" width="0.6" height="47.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="2386.64" y="1119.5" ></text>
</g>
<g >
<title>[unknown]  (419,901,719 samples, 0.01%)</title><rect x="10.0" y="1093" width="0.2" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.03" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,058,204,042 samples, 0.06%)</title><rect x="2388.6" y="1285" width="1.4" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="2391.58" y="1311.5" ></text>
</g>
<g >
<title>__run_timers (3,386,494,224 samples, 0.05%)</title><rect x="2381.9" y="853" width="1.2" height="47.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="2384.89" y="879.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,703,424,113 samples, 0.05%)</title><rect x="2363.0" y="805" width="1.3" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="2366.01" y="831.5" ></text>
</g>
<g >
<title>regmap_read (1,905,227,271 samples, 0.03%)</title><rect x="2366.5" y="757" width="0.7" height="47.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="2369.52" y="783.5" ></text>
</g>
<g >
<title>account_user_time (428,583,373 samples, 0.01%)</title><rect x="2377.9" y="709" width="0.2" height="47.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="2380.93" y="735.5" ></text>
</g>
<g >
<title>iommu_completion_wait.isra.0 (2,398,800,105 samples, 0.04%)</title><rect x="2382.1" y="565" width="0.9" height="47.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="2385.14" y="591.5" ></text>
</g>
<g >
<title>perf_ibs_start (940,777,613 samples, 0.01%)</title><rect x="2379.0" y="613" width="0.3" height="47.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="2382.02" y="639.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (331,055,054 samples, 0.00%)</title><rect x="2372.7" y="805" width="0.1" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="2375.67" y="831.5" ></text>
</g>
<g >
<title>rmqueue_bulk (327,562,538 samples, 0.00%)</title><rect x="2374.2" y="469" width="0.1" height="47.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="2377.20" y="495.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (377,071,014 samples, 0.01%)</title><rect x="2361.8" y="613" width="0.2" height="47.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="2364.83" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (4,971,332,029 samples, 0.07%)</title><rect x="2362.6" y="997" width="1.8" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="2365.64" y="1023.5" ></text>
</g>
<g >
<title>dw_reg_read (570,526,718 samples, 0.01%)</title><rect x="2366.9" y="709" width="0.2" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2369.87" y="735.5" ></text>
</g>
<g >
<title>clear_page_erms (891,477,272 samples, 0.01%)</title><rect x="2373.8" y="565" width="0.3" height="47.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="2376.75" y="591.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (290,024,086 samples, 0.00%)</title><rect x="2365.0" y="325" width="0.1" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2367.96" y="351.5" ></text>
</g>
<g >
<title>perf_ibs_stop (467,965,969 samples, 0.01%)</title><rect x="2379.3" y="613" width="0.2" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="2382.34" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,449,434,509 samples, 0.07%)</title><rect x="2362.8" y="901" width="1.5" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="2365.77" y="927.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;double&gt;::infinity (995,429,788 samples, 0.01%)</title><rect x="2301.9" y="1093" width="0.4" height="47.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="2304.90" y="1119.5" ></text>
</g>
<g >
<title>Vector::Vector (4,262,869,929 samples, 0.06%)</title><rect x="2284.6" y="1045" width="1.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2287.64" y="1071.5" ></text>
</g>
<g >
<title>dw_reg_read (1,290,737,725 samples, 0.02%)</title><rect x="2368.2" y="709" width="0.4" height="47.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="2371.18" y="735.5" ></text>
</g>
<g >
<title>mas_store_prealloc (377,071,014 samples, 0.01%)</title><rect x="2361.8" y="661" width="0.2" height="47.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="2364.83" y="687.5" ></text>
</g>
<g >
<title>clear_page_erms (380,364,415 samples, 0.01%)</title><rect x="2363.6" y="469" width="0.2" height="47.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="2366.64" y="495.5" ></text>
</g>
<g >
<title>irqentry_enter (290,194,723 samples, 0.00%)</title><rect x="2383.1" y="1045" width="0.1" height="47.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="2386.11" y="1071.5" ></text>
</g>
<g >
<title>free_unref_page_commit (754,864,834 samples, 0.01%)</title><rect x="2389.5" y="325" width="0.2" height="47.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="2392.47" y="351.5" ></text>
</g>
<g >
<title>dw_reg_write (389,753,239 samples, 0.01%)</title><rect x="2367.7" y="709" width="0.1" height="47.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="2370.65" y="735.5" ></text>
</g>
<g >
<title>delay_halt (2,111,500,807 samples, 0.03%)</title><rect x="2382.2" y="469" width="0.7" height="47.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="2385.20" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (13,709,596,984 samples, 0.20%)</title><rect x="2364.8" y="901" width="4.8" height="47.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="2367.78" y="927.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,842,627,261 samples, 0.03%)</title><rect x="2373.7" y="613" width="0.6" height="47.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="2376.68" y="639.5" ></text>
</g>
<g >
<title>folio_add_lru (942,897,553 samples, 0.01%)</title><rect x="2374.5" y="757" width="0.3" height="47.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="2377.46" y="783.5" ></text>
</g>
<g >
<title>amd_iommu_flush_iotlb_all (2,587,247,961 samples, 0.04%)</title><rect x="2382.1" y="661" width="0.9" height="47.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="2385.10" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (12,684,618,558 samples, 0.19%)</title><rect x="2370.9" y="997" width="4.4" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="2373.89" y="1023.5" ></text>
</g>
<g >
<title>main.exe (6,801,363,130,727 samples, 99.99%)</title><rect x="10.2" y="1333" width="2379.8" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.20" y="1359.5" >main.exe</text>
</g>
<g >
<title>timekeeping_update (857,049,562 samples, 0.01%)</title><rect x="2377.4" y="661" width="0.3" height="47.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="2380.40" y="687.5" ></text>
</g>
<g >
<title>handle_edge_irq (14,997,043,094 samples, 0.22%)</title><rect x="2364.8" y="997" width="5.2" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="2367.76" y="1023.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (571,504,032 samples, 0.01%)</title><rect x="2378.2" y="757" width="0.2" height="47.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="2381.16" y="783.5" ></text>
</g>
<g >
<title>free_unref_page_list (1,086,410,410 samples, 0.02%)</title><rect x="2389.4" y="373" width="0.4" height="47.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="2392.44" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,089,588,472 samples, 0.02%)</title><rect x="2363.5" y="613" width="0.4" height="47.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="2366.52" y="639.5" ></text>
</g>
<g >
<title>tick_program_event (811,952,608 samples, 0.01%)</title><rect x="2381.4" y="949" width="0.3" height="47.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="2384.37" y="975.5" ></text>
</g>
<g >
<title>optc1_get_crtc_scanoutpos (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="85" width="0.1" height="47.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="2368.13" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_brk (2,471,903,133 samples, 0.04%)</title><rect x="2361.7" y="805" width="0.8" height="47.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="2364.68" y="831.5" ></text>
</g>
<g >
<title>clockevents_program_event (670,233,563 samples, 0.01%)</title><rect x="2381.4" y="901" width="0.2" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="2384.39" y="927.5" ></text>
</g>
<g >
<title>Vector::Vector (6,204,887,004 samples, 0.09%)</title><rect x="2299.7" y="1045" width="2.2" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2302.68" y="1071.5" ></text>
</g>
<g >
<title>Vector::operator+ (7,870,052,222 samples, 0.12%)</title><rect x="2283.4" y="1093" width="2.7" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="2286.37" y="1119.5" ></text>
</g>
<g >
<title>__do_sys_brk (2,471,903,133 samples, 0.04%)</title><rect x="2361.7" y="757" width="0.8" height="47.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="2364.68" y="783.5" ></text>
</g>
<g >
<title>consume_stock (380,280,270 samples, 0.01%)</title><rect x="2372.5" y="709" width="0.1" height="47.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="2375.51" y="735.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (4,050,098,878 samples, 0.06%)</title><rect x="2381.7" y="997" width="1.4" height="47.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="2384.67" y="1023.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (816,774,000 samples, 0.01%)</title><rect x="2365.0" y="469" width="0.2" height="47.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="2367.96" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,356,790,715 samples, 0.33%)</title><rect x="2375.6" y="1141" width="7.8" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="2378.59" y="1167.5" ></text>
</g>
<g >
<title>optc1_get_position (338,732,793 samples, 0.00%)</title><rect x="2365.1" y="37" width="0.1" height="47.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="2368.13" y="63.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (1,805,461,965 samples, 0.03%)</title><rect x="2364.8" y="853" width="0.6" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="2367.78" y="879.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2,172,685,315 samples, 0.03%)</title><rect x="2378.7" y="661" width="0.8" height="47.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="2381.75" y="687.5" ></text>
</g>
</g>
</svg>
