<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="886" onload="init(evt)" viewBox="0 0 2400 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="886.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="869" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="869" > </text>
<g id="frames">
<g >
<title>sysvec_apic_timer_interrupt (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="469" width="19.8" height="47.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1083.69" y="495.5" ></text>
</g>
<g >
<title>[unknown]  (47,091,476 samples, 0.83%)</title><rect x="1120.2" y="565" width="19.8" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1123.24" y="591.5" ></text>
</g>
<g >
<title>ImageTexture::getColor (47,074,829 samples, 0.83%)</title><rect x="944.2" y="565" width="19.8" height="47.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="947.20" y="591.5" ></text>
</g>
<g >
<title>Plane::getIntersection (187,645,687 samples, 3.32%)</title><rect x="1336.2" y="469" width="78.9" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1339.21" y="495.5" >Plane::ge..</text>
</g>
<g >
<title>Vector::operator- (46,272,253 samples, 0.82%)</title><rect x="1454.5" y="469" width="19.5" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1457.55" y="495.5" ></text>
</g>
<g >
<title>calcColor (93,825,224 samples, 1.66%)</title><rect x="1568.2" y="517" width="39.5" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1571.22" y="543.5" >cal..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="421" width="19.8" height="47.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1083.69" y="447.5" ></text>
</g>
<g >
<title>Plane::getLightIntersection (47,228,293 samples, 0.83%)</title><rect x="2074.5" y="517" width="19.9" height="47.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="2077.53" y="543.5" ></text>
</g>
<g >
<title>refresh (5,659,112,594 samples, 99.99%)</title><rect x="10.1" y="661" width="2379.9" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.13" y="687.5" >refresh</text>
</g>
<g >
<title>Vector::dot (42,086,931 samples, 0.74%)</title><rect x="889.0" y="469" width="17.7" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="892.04" y="495.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (364,137,344 samples, 6.43%)</title><rect x="1647.3" y="469" width="153.1" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1650.30" y="495.5" >Box::getLightInters..</text>
</g>
<g >
<title>Vector::mag (47,012,956 samples, 0.83%)</title><rect x="1858.2" y="469" width="19.8" height="47.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1861.20" y="495.5" ></text>
</g>
<g >
<title>solveScalers (42,225,739 samples, 0.75%)</title><rect x="1474.0" y="469" width="17.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1477.01" y="495.5" ></text>
</g>
<g >
<title>Vector::dot (43,764,273 samples, 0.77%)</title><rect x="964.0" y="517" width="18.4" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="967.00" y="543.5" ></text>
</g>
<g >
<title>getLight (46,686,716 samples, 0.82%)</title><rect x="1588.0" y="469" width="19.7" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1591.04" y="495.5" ></text>
</g>
<g >
<title>Ray::Ray (187,829,027 samples, 3.32%)</title><rect x="2094.4" y="517" width="79.0" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="2097.39" y="543.5" >Ray::Ray</text>
</g>
<g >
<title>Vector::dot (46,097,975 samples, 0.81%)</title><rect x="1529.0" y="517" width="19.4" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1532.03" y="543.5" ></text>
</g>
<g >
<title>Vector::operator+ (94,238,385 samples, 1.67%)</title><rect x="630.2" y="517" width="39.6" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="633.20" y="543.5" >Vec..</text>
</g>
<g >
<title>Vector::operator- (47,073,210 samples, 0.83%)</title><rect x="1878.0" y="469" width="19.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1880.97" y="495.5" ></text>
</g>
<g >
<title>Vector::operator- (41,811,247 samples, 0.74%)</title><rect x="1511.4" y="469" width="17.6" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1514.45" y="495.5" ></text>
</g>
<g >
<title>task_tick_fair (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="85" width="19.8" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1083.69" y="111.5" ></text>
</g>
<g >
<title>solveScalers (47,150,673 samples, 0.83%)</title><rect x="1780.6" y="421" width="19.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1783.61" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (303,328 samples, 0.01%)</title><rect x="10.0" y="661" width="0.1" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="517" width="19.8" height="47.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1083.69" y="543.5" ></text>
</g>
<g >
<title>Vector::Vector (47,073,210 samples, 0.83%)</title><rect x="1878.0" y="421" width="19.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1880.97" y="447.5" ></text>
</g>
<g >
<title>do_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="325" width="0.1" height="47.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>Vector::operator- (46,994,171 samples, 0.83%)</title><rect x="1100.5" y="565" width="19.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1103.48" y="591.5" ></text>
</g>
<g >
<title>Vector::dot (141,603,231 samples, 2.50%)</title><rect x="1955.7" y="469" width="59.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1958.68" y="495.5" >Vector..</text>
</g>
<g >
<title>try_charge_memcg (303,328 samples, 0.01%)</title><rect x="10.0" y="229" width="0.1" height="47.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>Disk::getIntersection (131,177,028 samples, 2.32%)</title><rect x="889.0" y="565" width="55.2" height="47.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="892.04" y="591.5" >Disk:..</text>
</g>
<g >
<title>calcColor (5,659,112,594 samples, 99.99%)</title><rect x="10.1" y="613" width="2379.9" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.13" y="639.5" >calcColor</text>
</g>
<g >
<title>consume_stock (303,328 samples, 0.01%)</title><rect x="10.0" y="181" width="0.1" height="47.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="277" width="19.8" height="47.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1083.69" y="303.5" ></text>
</g>
<g >
<title>all (5,659,417,742 samples, 100%)</title><rect x="10.0" y="805" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (329,694,755 samples, 5.83%)</title><rect x="1935.9" y="517" width="138.6" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1938.88" y="543.5" >Box::getLightInte..</text>
</g>
<g >
<title>solveScalers (93,981,718 samples, 1.66%)</title><rect x="2035.0" y="469" width="39.5" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2038.01" y="495.5" >sol..</text>
</g>
<g >
<title>do_user_addr_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="517" width="0.1" height="47.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>Ray::Ray (234,096,638 samples, 4.14%)</title><rect x="1002.0" y="565" width="98.5" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1005.03" y="591.5" >Ray::Ray</text>
</g>
<g >
<title>Vector::Vector (45,534,614 samples, 0.80%)</title><rect x="2232.8" y="469" width="19.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2235.78" y="495.5" ></text>
</g>
<g >
<title>Vector::operator- (47,138,508 samples, 0.83%)</title><rect x="1568.2" y="421" width="19.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1571.22" y="447.5" ></text>
</g>
<g >
<title>calcColor (1,801,791,560 samples, 31.84%)</title><rect x="1140.0" y="565" width="757.8" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1143.05" y="591.5" >calcColor</text>
</g>
<g >
<title>Vector::operator- (47,088,734 samples, 0.83%)</title><rect x="1760.8" y="421" width="19.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1763.80" y="447.5" ></text>
</g>
<g >
<title>Vector::Vector (39,217,661 samples, 0.69%)</title><rect x="1744.3" y="373" width="16.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1747.31" y="399.5" ></text>
</g>
<g >
<title>[unknown]  (47,091,476 samples, 0.83%)</title><rect x="1120.2" y="517" width="19.8" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1123.24" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="229" width="19.8" height="47.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1083.69" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="133" width="19.8" height="47.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1083.69" y="159.5" ></text>
</g>
<g >
<title>Box::getIntersection (416,578,108 samples, 7.36%)</title><rect x="1316.6" y="517" width="175.2" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1319.58" y="543.5" >Box::getIntersection</text>
</g>
<g >
<title>Vector::Vector (41,811,247 samples, 0.74%)</title><rect x="1511.4" y="421" width="17.6" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1514.45" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="47.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>Plane::getIntersection (42,086,931 samples, 0.74%)</title><rect x="889.0" y="517" width="17.7" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="892.04" y="543.5" ></text>
</g>
<g >
<title>Vector::dot (140,871,170 samples, 2.49%)</title><rect x="1355.9" y="421" width="59.2" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1358.88" y="447.5" >Vector..</text>
</g>
<g >
<title>Box::getIntersection (1,448,782,718 samples, 25.60%)</title><rect x="279.8" y="565" width="609.2" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="282.77" y="591.5" >Box::getIntersection</text>
</g>
<g >
<title>Vector::operator* (92,695,698 samples, 1.64%)</title><rect x="2213.0" y="517" width="38.9" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2215.95" y="543.5" >Vec..</text>
</g>
<g >
<title>Box::getIntersection (47,138,508 samples, 0.83%)</title><rect x="1568.2" y="469" width="19.8" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1571.22" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="469" width="0.1" height="47.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="373" width="0.1" height="47.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>Vector::dot (46,686,716 samples, 0.82%)</title><rect x="1588.0" y="373" width="19.7" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1591.04" y="399.5" ></text>
</g>
<g >
<title>Vector::operator- (47,114,427 samples, 0.83%)</title><rect x="2193.1" y="469" width="19.9" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="2196.14" y="495.5" ></text>
</g>
<g >
<title>Vector::operator* (45,569,636 samples, 0.81%)</title><rect x="1725.1" y="421" width="19.2" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1728.15" y="447.5" ></text>
</g>
<g >
<title>Vector::operator+ (47,027,970 samples, 0.83%)</title><rect x="2015.2" y="469" width="19.8" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="2018.23" y="495.5" ></text>
</g>
<g >
<title>Plane::getNormal (46,676,664 samples, 0.82%)</title><rect x="982.4" y="565" width="19.6" height="47.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="985.40" y="591.5" ></text>
</g>
<g >
<title>Vector::Vector (47,108,205 samples, 0.83%)</title><rect x="650.0" y="469" width="19.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="653.02" y="495.5" ></text>
</g>
<g >
<title>solveScalers (430,426,960 samples, 7.61%)</title><rect x="708.0" y="517" width="181.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="711.03" y="543.5" >solveScalers</text>
</g>
<g >
<title>Vector::operator+ (187,381,472 samples, 3.31%)</title><rect x="2251.9" y="517" width="78.8" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="2254.93" y="543.5" >Vector::o..</text>
</g>
<g >
<title>main.exe (5,659,415,922 samples, 100.00%)</title><rect x="10.0" y="757" width="2380.0" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >main.exe</text>
</g>
<g >
<title>Plane::getIntersection (43,764,273 samples, 0.77%)</title><rect x="964.0" y="565" width="18.4" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="967.00" y="591.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="373" width="19.8" height="47.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1083.69" y="399.5" ></text>
</g>
<g >
<title>Vector::dot (371,979,663 samples, 6.57%)</title><rect x="453.9" y="469" width="156.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="456.95" y="495.5" >Vector::dot</text>
</g>
<g >
<title>Plane::getColor (46,807,580 samples, 0.83%)</title><rect x="1491.8" y="517" width="19.6" height="47.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1494.76" y="543.5" ></text>
</g>
<g >
<title>exc_page_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="565" width="0.1" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>Vector::Vector (96,006,290 samples, 1.70%)</title><rect x="848.7" y="469" width="40.3" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.66" y="495.5" >Vec..</text>
</g>
<g >
<title>update_process_times (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="181" width="19.8" height="47.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1083.69" y="207.5" ></text>
</g>
<g >
<title>Vector::dot (47,228,293 samples, 0.83%)</title><rect x="2074.5" y="469" width="19.9" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2077.53" y="495.5" ></text>
</g>
<g >
<title>Vector::operator+ (39,217,661 samples, 0.69%)</title><rect x="1744.3" y="421" width="16.5" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1747.31" y="447.5" ></text>
</g>
<g >
<title>Box::getLightIntersection (46,686,716 samples, 0.82%)</title><rect x="1588.0" y="421" width="19.7" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1591.04" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="325" width="19.8" height="47.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1083.69" y="351.5" ></text>
</g>
<g >
<title>Ray::Ray (137,362,932 samples, 2.43%)</title><rect x="1800.4" y="469" width="57.8" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1803.44" y="495.5" >Ray::Ray</text>
</g>
<g >
<title>insertionSort (140,925,513 samples, 2.49%)</title><rect x="2330.7" y="565" width="59.3" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="2333.73" y="591.5" >insert..</text>
</g>
<g >
<title>Vector::dot (94,181,808 samples, 1.66%)</title><rect x="1685.5" y="421" width="39.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1688.54" y="447.5" >Vec..</text>
</g>
<g >
<title>Vector::Vector (47,088,734 samples, 0.83%)</title><rect x="1760.8" y="373" width="19.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1763.80" y="399.5" ></text>
</g>
<g >
<title>getLight (1,029,553,459 samples, 18.19%)</title><rect x="1897.8" y="565" width="432.9" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1900.77" y="591.5" >getLight</text>
</g>
<g >
<title>Sphere::getIntersection (41,811,247 samples, 0.74%)</title><rect x="1511.4" y="517" width="17.6" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1514.45" y="543.5" ></text>
</g>
<g >
<title>update_curr (47,055,832 samples, 0.83%)</title><rect x="1080.7" y="37" width="19.8" height="47.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1083.69" y="63.5" ></text>
</g>
<g >
<title>Sphere::getLightIntersection (94,089,463 samples, 1.66%)</title><rect x="2173.4" y="517" width="39.6" height="47.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="2176.38" y="543.5" >Sph..</text>
</g>
<g >
<title>Vector::operator- (90,833,874 samples, 1.61%)</title><rect x="669.8" y="517" width="38.2" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="672.83" y="543.5" >Vec..</text>
</g>
<g >
<title>Vector::operator* (93,739,447 samples, 1.66%)</title><rect x="1415.1" y="469" width="39.4" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1418.13" y="495.5" >Vec..</text>
</g>
<g >
<title>Vector::Vector (46,979,637 samples, 0.83%)</title><rect x="2054.8" y="421" width="19.7" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2057.78" y="447.5" ></text>
</g>
<g >
<title>[unknown] (5,659,112,594 samples, 99.99%)</title><rect x="10.1" y="709" width="2379.9" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.13" y="735.5" >[unknown]</text>
</g>
<g >
<title>Plane::getIntersection (646,299,604 samples, 11.42%)</title><rect x="338.6" y="517" width="271.8" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="341.59" y="543.5" >Plane::getIntersection</text>
</g>
<g >
<title>[unknown]  (303,328 samples, 0.01%)</title><rect x="10.0" y="709" width="0.1" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>Vector::Vector (93,739,447 samples, 1.66%)</title><rect x="1415.1" y="421" width="39.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1418.13" y="447.5" >Vec..</text>
</g>
<g >
<title>Vector::Vector (140,259,442 samples, 2.48%)</title><rect x="2271.8" y="469" width="58.9" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2274.75" y="495.5" >Vector..</text>
</g>
<g >
<title>getLight (689,821,662 samples, 12.19%)</title><rect x="1607.7" y="517" width="290.1" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1610.67" y="543.5" >getLight</text>
</g>
<g >
<title>[unknown]  (47,073,016 samples, 0.83%)</title><rect x="1548.4" y="517" width="19.8" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1551.42" y="543.5" ></text>
</g>
<g >
<title>Vector::Vector (47,027,970 samples, 0.83%)</title><rect x="2015.2" y="421" width="19.8" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2018.23" y="447.5" ></text>
</g>
<g >
<title>solveScalers (47,059,700 samples, 0.83%)</title><rect x="924.4" y="517" width="19.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="927.41" y="543.5" ></text>
</g>
<g >
<title>Vector::operator- (42,030,397 samples, 0.74%)</title><rect x="906.7" y="517" width="17.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="909.74" y="543.5" ></text>
</g>
<g >
<title>Vector::operator* (47,124,957 samples, 0.83%)</title><rect x="610.4" y="517" width="19.8" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="613.38" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (303,328 samples, 0.01%)</title><rect x="10.0" y="613" width="0.1" height="47.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (303,328 samples, 0.01%)</title><rect x="10.0" y="277" width="0.1" height="47.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
</g>
</svg>
