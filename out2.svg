<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="2400" height="982" onload="init(evt)" viewBox="0 0 2400 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="2400.0" height="982.0" fill="url(#background)"  />
<text id="title" x="1200.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="965" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="2290.00" y="24" >Search</text>
<text id="ignorecase" x="2374.00" y="24" >ic</text>
<text id="matched" x="2290.00" y="965" > </text>
<g id="frames">
<g >
<title>do_execveat_common.isra.0 (298,779 samples, 0.01%)</title><rect x="10.0" y="565" width="0.1" height="47.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>Vector::operator+ (92,304,228 samples, 1.90%)</title><rect x="1200.3" y="613" width="45.2" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1203.28" y="639.5" >Vect..</text>
</g>
<g >
<title>Vector::Vector (139,846,170 samples, 2.88%)</title><rect x="1998.8" y="517" width="68.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="2001.79" y="543.5" >Vector:..</text>
</g>
<g >
<title>Vector::Vector (192,377,741 samples, 3.96%)</title><rect x="549.7" y="565" width="94.2" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="552.69" y="591.5" >Vector::Vec..</text>
</g>
<g >
<title>Vector::Vector (48,173,324 samples, 0.99%)</title><rect x="1176.7" y="517" width="23.6" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.70" y="543.5" >V..</text>
</g>
<g >
<title>Ray::Ray (49,017,850 samples, 1.01%)</title><rect x="757.5" y="661" width="24.0" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="760.46" y="687.5" >R..</text>
</g>
<g >
<title>__install_special_mapping (298,779 samples, 0.01%)</title><rect x="10.0" y="133" width="0.1" height="47.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>Plane::getIntersection (47,165,563 samples, 0.97%)</title><rect x="734.4" y="661" width="23.1" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="737.37" y="687.5" >P..</text>
</g>
<g >
<title>getLight (1,091,568,269 samples, 22.45%)</title><rect x="1807.8" y="661" width="534.3" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1810.77" y="687.5" >getLight</text>
</g>
<g >
<title>refresh (4,861,956,824 samples, 99.99%)</title><rect x="10.1" y="757" width="2379.9" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.15" y="783.5" >refresh</text>
</g>
<g >
<title>Box::getLightIntersection (233,971,493 samples, 4.81%)</title><rect x="1386.5" y="517" width="114.5" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1389.50" y="543.5" >Box::getLightI..</text>
</g>
<g >
<title>Vector::Vector (47,719,994 samples, 0.98%)</title><rect x="1688.8" y="469" width="23.4" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1691.80" y="495.5" >V..</text>
</g>
<g >
<title>exec_binprm (298,779 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="47.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (298,779 samples, 0.01%)</title><rect x="10.0" y="469" width="0.1" height="47.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>load_elf_binary (298,779 samples, 0.01%)</title><rect x="10.0" y="325" width="0.1" height="47.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>solveScalers (184,920,000 samples, 3.80%)</title><rect x="643.9" y="613" width="90.5" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="646.85" y="639.5" >solveScalers</text>
</g>
<g >
<title>fix (42,013,658 samples, 0.86%)</title><rect x="1501.0" y="613" width="20.6" height="47.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1504.03" y="639.5" ></text>
</g>
<g >
<title>Vector::operator- (50,508,260 samples, 1.04%)</title><rect x="1640.7" y="517" width="24.7" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1643.68" y="543.5" >V..</text>
</g>
<g >
<title>Plane::getIntersection (348,855,063 samples, 7.17%)</title><rect x="148.5" y="613" width="170.8" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="151.51" y="639.5" >Plane::getIntersection</text>
</g>
<g >
<title>x64_sys_call (298,779 samples, 0.01%)</title><rect x="10.0" y="661" width="0.1" height="47.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>solveScalers (225,216,235 samples, 4.63%)</title><rect x="1018.6" y="565" width="110.2" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1021.56" y="591.5" >solveScalers</text>
</g>
<g >
<title>Vector::Vector (49,122,330 samples, 1.01%)</title><rect x="1616.6" y="469" width="24.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1619.63" y="495.5" >V..</text>
</g>
<g >
<title>calcColor (4,719,149,158 samples, 97.06%)</title><rect x="80.0" y="709" width="2310.0" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="83.05" y="735.5" >calcColor</text>
</g>
<g >
<title>Vector::operator* (327,634,346 samples, 6.74%)</title><rect x="2181.7" y="613" width="160.4" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="2184.70" y="639.5" >Vector::operator*</text>
</g>
<g >
<title>Vector::mag2 (48,746,182 samples, 1.00%)</title><rect x="1152.8" y="565" width="23.9" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1155.84" y="591.5" >V..</text>
</g>
<g >
<title>Ray::Ray (49,102,566 samples, 1.01%)</title><rect x="1712.2" y="565" width="24.0" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1715.16" y="591.5" >R..</text>
</g>
<g >
<title>Vector::Vector (50,508,260 samples, 1.04%)</title><rect x="1640.7" y="469" width="24.7" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1643.68" y="495.5" >V..</text>
</g>
<g >
<title>Vector::dot (47,165,563 samples, 0.97%)</title><rect x="734.4" y="613" width="23.1" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="737.37" y="639.5" >V..</text>
</g>
<g >
<title>Box::getLightIntersection (499,616,124 samples, 10.28%)</title><rect x="1822.7" y="613" width="244.5" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1825.69" y="639.5" >Box::getLightIntersection</text>
</g>
<g >
<title>Vector::operator* (97,512,213 samples, 2.01%)</title><rect x="1760.0" y="565" width="47.8" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1763.04" y="591.5" >Vect..</text>
</g>
<g >
<title>Sphere::getIntersection (49,120,730 samples, 1.01%)</title><rect x="781.5" y="661" width="24.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="784.45" y="687.5" >S..</text>
</g>
<g >
<title>Vector::Vector (48,873,964 samples, 1.01%)</title><rect x="1477.1" y="421" width="23.9" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1480.10" y="447.5" >V..</text>
</g>
<g >
<title>Vector::dot (48,704,220 samples, 1.00%)</title><rect x="805.5" y="517" width="23.8" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="808.49" y="543.5" >V..</text>
</g>
<g >
<title>getLight (584,652,553 samples, 12.02%)</title><rect x="1521.6" y="613" width="286.2" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1524.59" y="639.5" >getLight</text>
</g>
<g >
<title>getLight (233,971,493 samples, 4.81%)</title><rect x="1386.5" y="565" width="114.5" height="47.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1389.50" y="591.5" >getLight</text>
</g>
<g >
<title>calcColor (2,047,614,046 samples, 42.11%)</title><rect x="805.5" y="661" width="1002.3" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="808.49" y="687.5" >calcColor</text>
</g>
<g >
<title>Vector::operator+ (329,391,977 samples, 6.77%)</title><rect x="341.8" y="613" width="161.3" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="344.84" y="639.5" >Vector::operator+</text>
</g>
<g >
<title>all (4,862,257,347 samples, 100%)</title><rect x="10.0" y="901" width="2380.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>solveScalers (48,799,022 samples, 1.00%)</title><rect x="2366.1" y="661" width="23.9" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2369.11" y="687.5" >s..</text>
</g>
<g >
<title>Vector::dot (137,951,815 samples, 2.84%)</title><rect x="1386.5" y="469" width="67.5" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1389.50" y="495.5" >Vector:..</text>
</g>
<g >
<title>Vector::operator- (287,615,827 samples, 5.92%)</title><rect x="503.1" y="613" width="140.8" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="506.07" y="639.5" >Vector::operator-</text>
</g>
<g >
<title>Vector::Vector (49,096,588 samples, 1.01%)</title><rect x="1974.8" y="517" width="24.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1977.76" y="543.5" >V..</text>
</g>
<g >
<title>Vector::dot (49,060,086 samples, 1.01%)</title><rect x="1362.5" y="517" width="24.0" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1365.49" y="543.5" >V..</text>
</g>
<g >
<title>Vector::operator- (49,132,534 samples, 1.01%)</title><rect x="994.5" y="565" width="24.1" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="997.51" y="591.5" >V..</text>
</g>
<g >
<title>Vector::dot (264,716,636 samples, 5.44%)</title><rect x="1845.2" y="565" width="129.6" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1848.19" y="591.5" >Vector::dot</text>
</g>
<g >
<title>Vector::Vector (46,106,986 samples, 0.95%)</title><rect x="319.3" y="565" width="22.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="322.27" y="591.5" >V..</text>
</g>
<g >
<title>Plane::getIntersection (49,060,086 samples, 1.01%)</title><rect x="1362.5" y="565" width="24.0" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1365.49" y="591.5" >P..</text>
</g>
<g >
<title>Vector::mag2 (49,120,730 samples, 1.01%)</title><rect x="781.5" y="613" width="24.0" height="47.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="784.45" y="639.5" >V..</text>
</g>
<g >
<title>Vector::operator+ (97,764,525 samples, 2.01%)</title><rect x="1268.6" y="517" width="47.9" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1271.61" y="543.5" >Vect..</text>
</g>
<g >
<title>__x64_sys_execve (298,779 samples, 0.01%)</title><rect x="10.0" y="613" width="0.1" height="47.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>Vector::dot (145,826,878 samples, 3.00%)</title><rect x="1545.3" y="517" width="71.3" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1548.25" y="543.5" >Vector::..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (298,779 samples, 0.01%)</title><rect x="10.0" y="757" width="0.1" height="47.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>Vector::Vector (49,114,263 samples, 1.01%)</title><rect x="56.0" y="661" width="24.0" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.01" y="687.5" >V..</text>
</g>
<g >
<title>perf_event_mmap (298,779 samples, 0.01%)</title><rect x="10.0" y="85" width="0.1" height="47.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>[unknown]  (47,291,927 samples, 0.97%)</title><rect x="1245.5" y="613" width="23.1" height="47.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1248.47" y="639.5" >[..</text>
</g>
<g >
<title>bprm_execve (298,779 samples, 0.01%)</title><rect x="10.0" y="517" width="0.1" height="47.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>Ray::Ray (188,683,113 samples, 3.88%)</title><rect x="2067.2" y="613" width="92.4" height="47.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="2070.25" y="639.5" >Ray::Ray</text>
</g>
<g >
<title>insertionSort (49,107,683 samples, 1.01%)</title><rect x="2342.1" y="661" width="24.0" height="47.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="2345.08" y="687.5" >i..</text>
</g>
<g >
<title>Box::getIntersection (191,777,736 samples, 3.94%)</title><rect x="1268.6" y="565" width="93.9" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1271.61" y="591.5" >Box::getInt..</text>
</g>
<g >
<title>Vector::operator+ (337,457,485 samples, 6.94%)</title><rect x="829.3" y="565" width="165.2" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="832.33" y="591.5" >Vector::operator+</text>
</g>
<g >
<title>main.exe (4,862,255,603 samples, 100.00%)</title><rect x="10.0" y="853" width="2380.0" height="47.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >main.exe</text>
</g>
<g >
<title>arch_setup_additional_pages (298,779 samples, 0.01%)</title><rect x="10.0" y="277" width="0.1" height="47.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>Vector::dot (45,147,611 samples, 0.93%)</title><rect x="2159.6" y="613" width="22.1" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="2162.60" y="639.5" >V..</text>
</g>
<g >
<title>Vector::operator* (49,122,330 samples, 1.01%)</title><rect x="1616.6" y="517" width="24.1" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1619.63" y="543.5" >V..</text>
</g>
<g >
<title>solveScalers (139,846,170 samples, 2.88%)</title><rect x="1998.8" y="565" width="68.4" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="2001.79" y="591.5" >solveSc..</text>
</g>
<g >
<title>Box::getLightIntersection (389,323,163 samples, 8.01%)</title><rect x="1521.6" y="565" width="190.6" height="47.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1524.59" y="591.5" >Box::getLightIntersection</text>
</g>
<g >
<title>Plane::getIntersection (48,704,220 samples, 1.00%)</title><rect x="805.5" y="565" width="23.8" height="47.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="808.49" y="591.5" >P..</text>
</g>
<g >
<title>Vector::operator* (46,106,986 samples, 0.95%)</title><rect x="319.3" y="613" width="22.5" height="47.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="322.27" y="639.5" >V..</text>
</g>
<g >
<title>Sphere::getIntersection (96,919,506 samples, 1.99%)</title><rect x="1152.8" y="613" width="47.5" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1155.84" y="639.5" >Sphe..</text>
</g>
<g >
<title>Vector::dot (48,714,611 samples, 1.00%)</title><rect x="1736.2" y="565" width="23.8" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1739.19" y="591.5" >V..</text>
</g>
<g >
<title>Vector::Vector (49,132,534 samples, 1.01%)</title><rect x="994.5" y="517" width="24.1" height="47.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="997.51" y="543.5" >V..</text>
</g>
<g >
<title>Box::getIntersection (660,510,474 samples, 13.58%)</title><rect x="805.5" y="613" width="323.3" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="808.49" y="639.5" >Box::getIntersection</text>
</g>
<g >
<title>perf_event_mmap_event (298,779 samples, 0.01%)</title><rect x="10.0" y="37" width="0.1" height="47.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>Vector::operator- (48,173,324 samples, 0.99%)</title><rect x="1176.7" y="565" width="23.6" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1179.70" y="591.5" >V..</text>
</g>
<g >
<title>map_vdso (298,779 samples, 0.01%)</title><rect x="10.0" y="229" width="0.1" height="47.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>Plane::getColor (49,112,385 samples, 1.01%)</title><rect x="1128.8" y="613" width="24.0" height="47.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1131.80" y="639.5" >P..</text>
</g>
<g >
<title>solveScalers (96,019,678 samples, 1.97%)</title><rect x="1454.0" y="469" width="47.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1457.03" y="495.5" >solv..</text>
</g>
<g >
<title>solveScalers (95,528,397 samples, 1.96%)</title><rect x="1665.4" y="517" width="46.8" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1668.40" y="543.5" >solv..</text>
</g>
<g >
<title>do_syscall_64 (298,779 samples, 0.01%)</title><rect x="10.0" y="709" width="0.1" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>Box::getIntersection (1,196,889,853 samples, 24.62%)</title><rect x="148.5" y="661" width="585.9" height="47.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="151.51" y="687.5" >Box::getIntersection</text>
</g>
<g >
<title>Vector::operator- (49,096,588 samples, 1.01%)</title><rect x="1974.8" y="565" width="24.0" height="47.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1977.76" y="591.5" >V..</text>
</g>
<g >
<title>_install_special_mapping (298,779 samples, 0.01%)</title><rect x="10.0" y="181" width="0.1" height="47.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>solveScalers (94,013,211 samples, 1.93%)</title><rect x="1316.5" y="517" width="46.0" height="47.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1319.47" y="543.5" >solv..</text>
</g>
<g >
<title>Vector::operator+ (142,807,666 samples, 2.94%)</title><rect x="10.1" y="709" width="69.9" height="47.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="13.15" y="735.5" >Vector:..</text>
</g>
<g >
<title>search_binary_handler (298,779 samples, 0.01%)</title><rect x="10.0" y="373" width="0.1" height="47.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>Vector::dot (259,597,375 samples, 5.34%)</title><rect x="192.2" y="565" width="127.1" height="47.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="195.20" y="591.5" >Vector::dot</text>
</g>
<g >
<title>[unknown] (4,862,255,603 samples, 100.00%)</title><rect x="10.0" y="805" width="2380.0" height="47.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[unknown]</text>
</g>
<g >
<title>calcColor (474,809,315 samples, 9.77%)</title><rect x="1268.6" y="613" width="232.4" height="47.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1271.61" y="639.5" >calcColor</text>
</g>
</g>
</svg>
